{"version":"1.122.0","results":[{"check_id":"php.lang.security.taint-cookie-secure-false.taint-cookie-secure-false","path":"../../DVWA/dvwa/includes/dvwaPage.inc.php","start":{"line":227,"col":54,"offset":6210},"end":{"line":227,"col":59,"offset":6215},"extra":{"metavars":{"$NAME":{"start":{"line":227,"col":13,"offset":6169},"end":{"line":227,"col":23,"offset":6179},"abstract_content":"'security'"},"$VALUE":{"start":{"line":227,"col":25,"offset":6181},"end":{"line":227,"col":40,"offset":6196},"abstract_content":"$pSecurityLevel"},"$EXPIRES":{"start":{"line":227,"col":42,"offset":6198},"end":{"line":227,"col":43,"offset":6199},"abstract_content":"0"},"$PATH":{"start":{"line":227,"col":45,"offset":6201},"end":{"line":227,"col":48,"offset":6204},"abstract_content":"\"/\""},"$DOMAIN":{"start":{"line":227,"col":50,"offset":6206},"end":{"line":227,"col":52,"offset":6208},"abstract_content":"\"\""},"$SINK":{"start":{"line":227,"col":54,"offset":6210},"end":{"line":227,"col":59,"offset":6215},"abstract_content":"false"}},"message":"Secure cookie flag is explicitly disabled. This will cause cookies to be transmitted over unencrypted HTTP connections which can allow theft of confidential user data such as session tokens.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"functional-categories":["debug::search::active-debug-code::lang"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://www.php.net/manual/en/function.setcookie.php","https://www.php.net/manual/en/function.session-set-cookie-params.php","https://www.php.net/manual/en/configuration.file.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/php.lang.security.taint-cookie-secure-false.taint-cookie-secure-false","shortlink":"https://sg.run/GJx2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27192,"rule_id":"yyUx3k","rv_id":947717,"url":"https://semgrep.dev/playground/r/nWTpY5x/php.lang.security.taint-cookie-secure-false.taint-cookie-secure-false","version_id":"nWTpY5x"}}},"severity":"ERROR","fingerprint":"ab3a77ecf3370c704595a42f37391f3944a7d3518ab01f5ce56f784094ec14c1f93bfd6e8d10d1d7aa7bd36bd88b1b636c51f3bb48805f595f3b039c03b24541_0","lines":"\tsetcookie( 'security', $pSecurityLevel, 0, \"/\", \"\", false, $httponly );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/dvwa/includes/dvwaPage.inc.php","start":{"line":227,"col":54,"offset":6210},"end":{"line":227,"col":59,"offset":6215}},"false"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"../../DVWA/dvwa/includes/dvwaPage.inc.php","start":{"line":227,"col":54,"offset":6210},"end":{"line":227,"col":59,"offset":6215}},"false"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.taint-cookie-http-false.taint-cookie-http-false","path":"../../DVWA/dvwa/includes/dvwaPage.inc.php","start":{"line":227,"col":61,"offset":6217},"end":{"line":227,"col":70,"offset":6226},"extra":{"metavars":{"$NAME":{"start":{"line":227,"col":13,"offset":6169},"end":{"line":227,"col":23,"offset":6179},"abstract_content":"'security'"},"$VALUE":{"start":{"line":227,"col":25,"offset":6181},"end":{"line":227,"col":40,"offset":6196},"abstract_content":"$pSecurityLevel"},"$EXPIRES":{"start":{"line":227,"col":42,"offset":6198},"end":{"line":227,"col":43,"offset":6199},"abstract_content":"0"},"$PATH":{"start":{"line":227,"col":45,"offset":6201},"end":{"line":227,"col":48,"offset":6204},"abstract_content":"\"/\""},"$DOMAIN":{"start":{"line":227,"col":50,"offset":6206},"end":{"line":227,"col":52,"offset":6208},"abstract_content":"\"\""},"$SECURE":{"start":{"line":227,"col":54,"offset":6210},"end":{"line":227,"col":59,"offset":6215},"abstract_content":"false"},"$SINK":{"start":{"line":227,"col":61,"offset":6217},"end":{"line":227,"col":70,"offset":6226},"abstract_content":"$httponly"}},"message":"HttpOnly cookie flag is explicitly disabled. This will cause cookies to be transmitted over unencrypted HTTP connections which can allow theft of confidential user data such as session tokens.","metadata":{"likelihood":"MEDIUM","impact":"LOW","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],"functional-categories":["debug::search::active-debug-code::lang"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://www.php.net/manual/en/function.setcookie.php","https://www.php.net/manual/en/function.session-set-cookie-params.php","https://www.php.net/manual/en/configuration.file.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/php.lang.security.taint-cookie-http-false.taint-cookie-http-false","shortlink":"https://sg.run/5qrX","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27191,"rule_id":"9AU4dD","rv_id":947716,"url":"https://semgrep.dev/playground/r/ZRT3qk4/php.lang.security.taint-cookie-http-false.taint-cookie-http-false","version_id":"ZRT3qk4"}}},"severity":"ERROR","fingerprint":"1400a417b042a0f0a1b0168305cce90b26c3e47531766904dc9055ca882402ec3f7012c7d859af53e852799d0f22fb500890ba90132a03efedcf9c573d06e797_0","lines":"\tsetcookie( 'security', $pSecurityLevel, 0, \"/\", \"\", false, $httponly );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/dvwa/includes/dvwaPage.inc.php","start":{"line":224,"col":15,"offset":6146},"end":{"line":224,"col":20,"offset":6151}},"false"]],"intermediate_vars":[{"location":{"path":"../../DVWA/dvwa/includes/dvwaPage.inc.php","start":{"line":224,"col":3,"offset":6134},"end":{"line":224,"col":12,"offset":6143}},"content":"$httponly"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/dvwa/includes/dvwaPage.inc.php","start":{"line":227,"col":61,"offset":6217},"end":{"line":227,"col":70,"offset":6226}},"$httponly"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/instructions.php","start":{"line":26,"col":36,"offset":1038},"end":{"line":26,"col":67,"offset":1069},"extra":{"metavars":{"$FILENAME":{"start":{"line":26,"col":36,"offset":1038},"end":{"line":26,"col":67,"offset":1069},"abstract_content":"DVWA_WEB_PAGE_TO_ROOT.$readFile"}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"56183c0fe6862d1538a862839e51141598a42aeae6f1343bb9a40188fbc95ece775bdd994a30e462e9417ddbddef280fb5b1b6d4c37a3ba08e60e0c2b69ed547_0","lines":"$instructions = file_get_contents( DVWA_WEB_PAGE_TO_ROOT.$readFile );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/instructions.php","start":{"line":20,"col":44,"offset":847},"end":{"line":20,"col":49,"offset":852}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/instructions.php","start":{"line":20,"col":1,"offset":804},"end":{"line":20,"col":15,"offset":818}},"content":"$selectedDocId"},{"location":{"path":"../../DVWA/instructions.php","start":{"line":24,"col":1,"offset":953},"end":{"line":24,"col":10,"offset":962}},"content":"$readFile"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/instructions.php","start":{"line":26,"col":36,"offset":1038},"end":{"line":26,"col":67,"offset":1069}},"DVWA_WEB_PAGE_TO_ROOT.$readFile"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/login.php","start":{"line":41,"col":17,"offset":2004},"end":{"line":41,"col":48,"offset":2035},"extra":{"metavars":{"$VAR1":{"start":{"line":41,"col":17,"offset":2004},"end":{"line":41,"col":43,"offset":2030},"abstract_content":"mysqli_num_rows($result)"},"$VAR2":{"start":{"line":41,"col":47,"offset":2034},"end":{"line":41,"col":48,"offset":2035},"abstract_content":"1"}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"1d5a6a04bc7187cc2acde3a47650225f6c0e1d539de890773d3691fd149352c8eb167b18b188789dd9cfe9c014b053609fdcb5a70a2ccdb710e097e0d9602805_0","lines":"\tif( $result && mysqli_num_rows( $result ) == 1 ) {    // Login Successful...","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/login.php","start":{"line":27,"col":10,"offset":1159},"end":{"line":27,"col":22,"offset":1171}},"md5( $pass )"]],"intermediate_vars":[{"location":{"path":"../../DVWA/login.php","start":{"line":27,"col":2,"offset":1151},"end":{"line":27,"col":7,"offset":1156}},"content":"$pass"},{"location":{"path":"../../DVWA/login.php","start":{"line":39,"col":12,"offset":1617},"end":{"line":39,"col":13,"offset":1618}},"content":"\""},{"location":{"path":"../../DVWA/login.php","start":{"line":39,"col":2,"offset":1607},"end":{"line":39,"col":8,"offset":1613}},"content":"$query"},{"location":{"path":"../../DVWA/login.php","start":{"line":40,"col":2,"offset":1685},"end":{"line":40,"col":9,"offset":1692}},"content":"$result"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/login.php","start":{"line":41,"col":17,"offset":2004},"end":{"line":41,"col":48,"offset":2035}},"mysqli_num_rows( $result ) == 1"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.phpinfo-use.phpinfo-use","path":"../../DVWA/phpinfo.php","start":{"line":8,"col":1,"offset":170},"end":{"line":8,"col":11,"offset":180},"extra":{"metavars":{},"message":"The 'phpinfo' function may reveal sensitive information about your environment.","metadata":{"cwe":["CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"],"references":["https://www.php.net/manual/en/function.phpinfo","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/PhpinfosSniff.php"],"category":"security","technology":["php"],"owasp":["A01:2021 - Broken Access Control"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/php.lang.security.phpinfo-use.phpinfo-use","shortlink":"https://sg.run/W82E","semgrep.dev":{"rule":{"origin":"community","r_id":9397,"rule_id":"ReUglY","rv_id":946012,"url":"https://semgrep.dev/playground/r/GxTP736/php.lang.security.phpinfo-use.phpinfo-use","version_id":"GxTP736"}}},"severity":"ERROR","fingerprint":"cd4dfd1920583639bd65170b118064f471eced1552e1c75cb8800131cd691bdf59aa3fce6a219ee36fb7601e2cd2d700b83095f13ed9c0fbc10879d294c1c53d_0","lines":"phpinfo();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.php-permissive-cors.php-permissive-cors","path":"../../DVWA/vulnerabilities/api/gen_openapi.php","start":{"line":6,"col":1,"offset":88},"end":{"line":6,"col":41,"offset":128},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":2,"offset":1},"abstract_content":"\""},"$2":{"start":{"line":1,"col":2,"offset":1},"end":{"line":1,"col":29,"offset":28},"abstract_content":"Access-Control-Allow-Origin"},"$3":{"start":{"line":2,"col":25,"offset":30},"end":{"line":2,"col":26,"offset":31},"abstract_content":"*"},"$4":{"start":{"line":2,"col":26,"offset":31},"end":{"line":2,"col":27,"offset":32},"abstract_content":"\""},"$VALUE":{"start":{"line":6,"col":8,"offset":95},"end":{"line":6,"col":40,"offset":127},"abstract_content":"\"Access-Control-Allow-Origin: *\""}},"message":"Access-Control-Allow-Origin response header is set to \"*\". This will disable CORS Same Origin Policy restrictions.","metadata":{"references":["https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Access-Control-Allow-Origin"],"owasp":["A07:2021 - Identification and Authentication Failures"],"cwe":["CWE-346: Origin Validation Error"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/php.lang.security.php-permissive-cors.php-permissive-cors","shortlink":"https://sg.run/y1XR","semgrep.dev":{"rule":{"origin":"community","r_id":13968,"rule_id":"OrU6JZ","rv_id":946010,"url":"https://semgrep.dev/playground/r/JdTDyEo/php.lang.security.php-permissive-cors.php-permissive-cors","version_id":"JdTDyEo"}}},"severity":"WARNING","fingerprint":"a1df814cba9c951699c7fea39403de098747a27a8a1c3e1dfc976195dbddae6a46dff947bf451c85d1535709fe8280df12b926a63a0ab2d902f8ff1699b0b27b_0","lines":"header(\"Access-Control-Allow-Origin: *\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.php-permissive-cors.php-permissive-cors","path":"../../DVWA/vulnerabilities/api/public/index.php","start":{"line":11,"col":1,"offset":180},"end":{"line":11,"col":41,"offset":220},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":2,"offset":1},"abstract_content":"\""},"$2":{"start":{"line":1,"col":2,"offset":1},"end":{"line":1,"col":29,"offset":28},"abstract_content":"Access-Control-Allow-Origin"},"$3":{"start":{"line":3,"col":24,"offset":30},"end":{"line":3,"col":25,"offset":31},"abstract_content":"*"},"$4":{"start":{"line":3,"col":25,"offset":31},"end":{"line":3,"col":26,"offset":32},"abstract_content":"\""},"$VALUE":{"start":{"line":11,"col":8,"offset":187},"end":{"line":11,"col":40,"offset":219},"abstract_content":"\"Access-Control-Allow-Origin: *\""}},"message":"Access-Control-Allow-Origin response header is set to \"*\". This will disable CORS Same Origin Policy restrictions.","metadata":{"references":["https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Access-Control-Allow-Origin"],"owasp":["A07:2021 - Identification and Authentication Failures"],"cwe":["CWE-346: Origin Validation Error"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/php.lang.security.php-permissive-cors.php-permissive-cors","shortlink":"https://sg.run/y1XR","semgrep.dev":{"rule":{"origin":"community","r_id":13968,"rule_id":"OrU6JZ","rv_id":946010,"url":"https://semgrep.dev/playground/r/JdTDyEo/php.lang.security.php-permissive-cors.php-permissive-cors","version_id":"JdTDyEo"}}},"severity":"WARNING","fingerprint":"1f8297d88671f8e03d12b2dbff9a3b9e711a91ab959e95db32906a39e4ba879e95ccca04234753a03af778bfeeb80dff2bd723a236c351e08c1b7cab9ab9c587_0","lines":"header(\"Access-Control-Allow-Origin: *\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/api/src/HealthController.php","start":{"line":88,"col":4,"offset":2445},"end":{"line":88,"col":52,"offset":2493},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"32c6e6372a57e0be8eb7b60a0eeb487b6edc364fd80ca52d5a6af6371d29bb6adfa95ad3b23e0c3f2cdf5af9a8a2820580923377dde33f03e2a57d39c2f77f69_0","lines":"\t\t\texec (\"ping -c 4 \" . $target, $output, $ret_var);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/api/src/HealthController.php","start":{"line":84,"col":32,"offset":2324},"end":{"line":84,"col":64,"offset":2356}},"file_get_contents('php://input')"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/api/src/HealthController.php","start":{"line":84,"col":3,"offset":2295},"end":{"line":84,"col":9,"offset":2301}},"content":"$input"},{"location":{"path":"../../DVWA/vulnerabilities/api/src/HealthController.php","start":{"line":86,"col":4,"offset":2413},"end":{"line":86,"col":11,"offset":2420}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/api/src/HealthController.php","start":{"line":88,"col":4,"offset":2445},"end":{"line":88,"col":52,"offset":2493}},"exec (\"ping -c 4 \" . $target, $output, $ret_var)"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/api/src/HealthController.php","start":{"line":88,"col":4,"offset":2445},"end":{"line":88,"col":53,"offset":2494},"extra":{"metavars":{"$FUNC":{"start":{"line":88,"col":4,"offset":2445},"end":{"line":88,"col":8,"offset":2449},"abstract_content":"exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"23a45bf21aa1648fe1de2d8718dd7f55137c91419ec04c5a407234e42d05b4a40447f3767df921268c7d3e69c30dbb63cdb24a2e55fcab8f48c3a37efa430db1_0","lines":"\t\t\texec (\"ping -c 4 \" . $target, $output, $ret_var);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.audit.openssl-decrypt-validate.openssl-decrypt-validate","path":"../../DVWA/vulnerabilities/api/src/Token.php","start":{"line":39,"col":3,"offset":972},"end":{"line":39,"col":110,"offset":1079},"extra":{"metavars":{},"message":"The function `openssl_decrypt` returns either a string of the decrypted data on success or `false` on failure. If the failure case is not handled, this could lead to undefined behavior in your application. Please handle the case where `openssl_decrypt` returns `false`.","metadata":{"references":["https://www.php.net/manual/en/function.openssl-decrypt.php"],"cwe":["CWE-252: Unchecked Return Value"],"owasp":["A02:2021 - Cryptographic Failures"],"technology":["php","openssl"],"category":"security","subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.audit.openssl-decrypt-validate.openssl-decrypt-validate","shortlink":"https://sg.run/kzn7","semgrep.dev":{"rule":{"origin":"community","r_id":17328,"rule_id":"YGUAoe","rv_id":945986,"url":"https://semgrep.dev/playground/r/1QToKR6/php.lang.security.audit.openssl-decrypt-validate.openssl-decrypt-validate","version_id":"1QToKR6"}}},"severity":"WARNING","fingerprint":"064012e8de5f5f1f0378357a20c1cc821c69fb3a96d6a4fa4bf234942aefe82ba093a50907bc2d95b4af757fbc960a813408b9eee2d4b7adf4ee04ab1be007e2_0","lines":"\t\t$cleartext = openssl_decrypt($value, self::ENCRYPTION_CIPHER, self::ENCRYPTION_KEY, $options=0, $iv, $tag);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"../../DVWA/vulnerabilities/authbypass/authbypass.js","start":{"line":43,"col":4,"offset":1189},"end":{"line":43,"col":150,"offset":1335},"extra":{"metavars":{"$EL":{"start":{"line":43,"col":4,"offset":1189},"end":{"line":43,"col":9,"offset":1194},"abstract_content":"cell0","propagated_value":{"svalue_start":{"line":42,"col":16,"offset":1166},"svalue_end":{"line":42,"col":34,"offset":1184},"svalue_abstract_content":"row.insertCell(-1)"}},"$HTML":{"start":{"line":43,"col":22,"offset":1207},"end":{"line":43,"col":149,"offset":1334},"abstract_content":"user['user_id']+'<input type=\"hidden\" id=\"user_id_'+user['user_id']+'\" name=\"user_id\" value=\"'+user['user_id']+'\" />'"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"324d92357d76d7c2f00c92c2b6ecf2fd00a21a35d87642c33dfe449b88772bf9c22238d2c4a625cb0bbce43f94decb9f85da855bbdac62c2398b77e9b746a9b8_0","lines":"\t\t\tcell0.innerHTML = user['user_id'] + '<input type=\"hidden\" id=\"user_id_' + user['user_id'] + '\" name=\"user_id\" value=\"' + user['user_id'] + '\" />';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"../../DVWA/vulnerabilities/authbypass/authbypass.js","start":{"line":45,"col":4,"offset":1373},"end":{"line":45,"col":139,"offset":1508},"extra":{"metavars":{"$EL":{"start":{"line":45,"col":4,"offset":1373},"end":{"line":45,"col":9,"offset":1378},"abstract_content":"cell1","propagated_value":{"svalue_start":{"line":44,"col":16,"offset":1351},"svalue_end":{"line":44,"col":33,"offset":1368},"svalue_abstract_content":"row.insertCell(1)"}},"$HTML":{"start":{"line":45,"col":22,"offset":1391},"end":{"line":45,"col":138,"offset":1507},"abstract_content":"'<input type=\"text\" id=\"first_name_'+user['user_id']+'\" name=\"first_name\" value=\"'+user['first_name']+'\" />'"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"c8227cf5e132bfbc4feda37d4f2a2f3f313414be46b721b7ab9f9150407bbfb6321f3b4c6148581d9ece234b86fc691dad5f43e2e79405f950b515fad986d57c_0","lines":"\t\t\tcell1.innerHTML = '<input type=\"text\" id=\"first_name_' + user['user_id'] + '\" name=\"first_name\" value=\"' + user['first_name'] + '\" />';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"../../DVWA/vulnerabilities/authbypass/authbypass.js","start":{"line":47,"col":4,"offset":1546},"end":{"line":47,"col":130,"offset":1672},"extra":{"metavars":{"$EL":{"start":{"line":47,"col":4,"offset":1546},"end":{"line":47,"col":9,"offset":1551},"abstract_content":"cell2","propagated_value":{"svalue_start":{"line":46,"col":16,"offset":1524},"svalue_end":{"line":46,"col":33,"offset":1541},"svalue_abstract_content":"row.insertCell(2)"}},"$HTML":{"start":{"line":47,"col":22,"offset":1564},"end":{"line":47,"col":129,"offset":1671},"abstract_content":"'<input type=\"text\" id=\"surname_'+user['user_id']+'\" name=\"surname\" value=\"'+user['surname']+'\" />'"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"3661bdfd687ae112e4b91cd0f25e6a3c80c77b10fa555606e11e4002bd7231f2f5fa65c0264abc720dd56c070bae7d6847bcf01fe6584d49f28893bdb09ebe9a_0","lines":"\t\t\tcell2.innerHTML = '<input type=\"text\" id=\"surname_' + user['user_id'] + '\" name=\"surname\" value=\"' + user['surname'] + '\" />';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"../../DVWA/vulnerabilities/authbypass/authbypass.js","start":{"line":49,"col":4,"offset":1710},"end":{"line":49,"col":112,"offset":1818},"extra":{"metavars":{"$EL":{"start":{"line":49,"col":4,"offset":1710},"end":{"line":49,"col":9,"offset":1715},"abstract_content":"cell3","propagated_value":{"svalue_start":{"line":48,"col":16,"offset":1688},"svalue_end":{"line":48,"col":33,"offset":1705},"svalue_abstract_content":"row.insertCell(3)"}},"$HTML":{"start":{"line":49,"col":22,"offset":1728},"end":{"line":49,"col":111,"offset":1817},"abstract_content":"'<input type=\"button\" value=\"Update\" onclick=\"submit_change('+user['user_id']+')\" />'"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"a03acc7aa4b1bf372b9466c14282f93bb8ff0206aeb6d23628c1833d2ebf38d87bab5cdfb0b9094d31d9301a521d4fb36c4e7282f41010cc360782905ff15f10_0","lines":"\t\t\tcell3.innerHTML = '<input type=\"button\" value=\"Update\" onclick=\"submit_change(' + user['user_id'] + ')\" />';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/brute/source/high.php","start":{"line":22,"col":17,"offset":1310},"end":{"line":22,"col":48,"offset":1341},"extra":{"metavars":{"$VAR1":{"start":{"line":22,"col":17,"offset":1310},"end":{"line":22,"col":43,"offset":1336},"abstract_content":"mysqli_num_rows($result)"},"$VAR2":{"start":{"line":22,"col":47,"offset":1340},"end":{"line":22,"col":48,"offset":1341},"abstract_content":"1"}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"d8cae44fa6b9650d249a842ca3afb0346bb21c004cdefbd0ecee948057ae8e0b0391457d615e3718584399ed330cc4e28d32e302d76f2905a80a0969fe2c0e63_0","lines":"\tif( $result && mysqli_num_rows( $result ) == 1 ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/high.php","start":{"line":16,"col":10,"offset":922},"end":{"line":16,"col":22,"offset":934}},"md5( $pass )"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/brute/source/high.php","start":{"line":16,"col":2,"offset":914},"end":{"line":16,"col":7,"offset":919}},"content":"$pass"},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/high.php","start":{"line":19,"col":12,"offset":970},"end":{"line":19,"col":13,"offset":971}},"content":"\""},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/high.php","start":{"line":19,"col":2,"offset":960},"end":{"line":19,"col":8,"offset":966}},"content":"$query"},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/high.php","start":{"line":20,"col":2,"offset":1042},"end":{"line":20,"col":9,"offset":1049}},"content":"$result"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/high.php","start":{"line":22,"col":17,"offset":1310},"end":{"line":22,"col":48,"offset":1341}},"mysqli_num_rows( $result ) == 1"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":12,"col":12,"offset":205},"end":{"line":12,"col":80,"offset":273},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":12,"col":13,"offset":206},"end":{"line":12,"col":49,"offset":242},"abstract_content":"SELECT * FROM `users` WHERE user = '"}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"a2a26c49c24f45246fcd2829bf1c97c28ae609f0e6a11e6ed7485954ef5d4ee96fe0298fe9fe3d86cb2d9a264203cb402408956df732ba4972078339cca7059f_0","lines":"\t$query  = \"SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":5,"col":10,"offset":71},"end":{"line":5,"col":15,"offset":76}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":7,"offset":68}},"content":"$user"},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":7,"offset":68}},"content":"$user"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":12,"col":12,"offset":205},"end":{"line":12,"col":80,"offset":273}},"\"SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":15,"col":17,"offset":545},"end":{"line":15,"col":48,"offset":576},"extra":{"metavars":{"$VAR1":{"start":{"line":15,"col":17,"offset":545},"end":{"line":15,"col":43,"offset":571},"abstract_content":"mysqli_num_rows($result)"},"$VAR2":{"start":{"line":15,"col":47,"offset":575},"end":{"line":15,"col":48,"offset":576},"abstract_content":"1"}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"79bc0e88323f44df7ab7bf4f78ebbde168268d8d8f2ccdd42aabb2f93587f5a6ee62f7ebcd29b51f9f60c0649c31da0fa0a9ccbf0a4bae44980eaecf713f021a_0","lines":"\tif( $result && mysqli_num_rows( $result ) == 1 ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":9,"col":10,"offset":153},"end":{"line":9,"col":22,"offset":165}},"md5( $pass )"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":9,"col":2,"offset":145},"end":{"line":9,"col":7,"offset":150}},"content":"$pass"},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":12,"col":12,"offset":205},"end":{"line":12,"col":13,"offset":206}},"content":"\""},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":12,"col":2,"offset":195},"end":{"line":12,"col":8,"offset":201}},"content":"$query"},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":13,"col":2,"offset":277},"end":{"line":13,"col":9,"offset":284}},"content":"$result"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/low.php","start":{"line":15,"col":17,"offset":545},"end":{"line":15,"col":48,"offset":576}},"mysqli_num_rows( $result ) == 1"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/brute/source/medium.php","start":{"line":17,"col":17,"offset":1133},"end":{"line":17,"col":48,"offset":1164},"extra":{"metavars":{"$VAR1":{"start":{"line":17,"col":17,"offset":1133},"end":{"line":17,"col":43,"offset":1159},"abstract_content":"mysqli_num_rows($result)"},"$VAR2":{"start":{"line":17,"col":47,"offset":1163},"end":{"line":17,"col":48,"offset":1164},"abstract_content":"1"}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"32da70a8f88cd9d1d0b02abd7aafc8c45193aa809778eaae07bf116a043bcad2e5d9ec9e63885859a6c4a81baf9d223c6847bcbc682241ad61162b762a779d37_0","lines":"\tif( $result && mysqli_num_rows( $result ) == 1 ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/medium.php","start":{"line":11,"col":10,"offset":741},"end":{"line":11,"col":22,"offset":753}},"md5( $pass )"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/brute/source/medium.php","start":{"line":11,"col":2,"offset":733},"end":{"line":11,"col":7,"offset":738}},"content":"$pass"},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/medium.php","start":{"line":14,"col":12,"offset":793},"end":{"line":14,"col":13,"offset":794}},"content":"\""},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/medium.php","start":{"line":14,"col":2,"offset":783},"end":{"line":14,"col":8,"offset":789}},"content":"$query"},{"location":{"path":"../../DVWA/vulnerabilities/brute/source/medium.php","start":{"line":15,"col":2,"offset":865},"end":{"line":15,"col":9,"offset":872}},"content":"$result"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/brute/source/medium.php","start":{"line":17,"col":17,"offset":1133},"end":{"line":17,"col":48,"offset":1164}},"mysqli_num_rows( $result ) == 1"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/captcha/source/impossible.php","start":{"line":46,"col":9,"offset":2227},"end":{"line":46,"col":32,"offset":2250},"extra":{"metavars":{"$VAR1":{"start":{"line":46,"col":9,"offset":2227},"end":{"line":46,"col":18,"offset":2236},"abstract_content":"$pass_new","propagated_value":{"svalue_start":{"line":14,"col":15,"offset":615},"svalue_end":{"line":14,"col":31,"offset":631},"svalue_abstract_content":"md5($pass_new)"}},"$VAR2":{"start":{"line":46,"col":22,"offset":2240},"end":{"line":46,"col":32,"offset":2250},"abstract_content":"$pass_conf","propagated_value":{"svalue_start":{"line":19,"col":15,"offset":1028},"svalue_end":{"line":19,"col":32,"offset":1045},"svalue_abstract_content":"md5($pass_conf)"}}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"b4d2f29a05d93ee8671e8f156d4134457293c76ad661e876cc413a9dfcd76d92da290755f25a094a652adbb25e8a907e9ed86782019f5619bcb260e9a631956c_0","lines":"\t\tif( ( $pass_new == $pass_conf) && ( $data->rowCount() == 1 ) ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/captcha/source/impossible.php","start":{"line":14,"col":15,"offset":615},"end":{"line":14,"col":31,"offset":631}},"md5( $pass_new )"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/captcha/source/impossible.php","start":{"line":14,"col":2,"offset":602},"end":{"line":14,"col":11,"offset":611}},"content":"$pass_new"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/captcha/source/impossible.php","start":{"line":46,"col":9,"offset":2227},"end":{"line":46,"col":32,"offset":2250}},"$pass_new == $pass_conf"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":92,"col":5,"offset":2466},"end":{"line":92,"col":27,"offset":2488},"extra":{"metavars":{"$VAR1":{"start":{"line":92,"col":5,"offset":2466},"end":{"line":92,"col":16,"offset":2477},"abstract_content":"$user->user"},"$VAR2":{"start":{"line":92,"col":20,"offset":2481},"end":{"line":92,"col":27,"offset":2488},"abstract_content":"\"sweep\""}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"0a4640b390602d7886098bf9a180a9749391bce852c17f39976738f640724636f1d7990dadf87390988989c0400ac5c73f8b082cd48d5e50b70d426b546f8d93_0","lines":"if ($user->user == \"sweep\" && $user->ex > time() && $user->level == \"admin\") {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":55,"col":15,"offset":1509},"end":{"line":55,"col":39,"offset":1533}},"bin2hex($sweep_ciphered)"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":55,"col":1,"offset":1495},"end":{"line":55,"col":4,"offset":1498}},"content":"$p1"},{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":60,"col":1,"offset":1765},"end":{"line":60,"col":3,"offset":1767}},"content":"$c"},{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":81,"col":1,"offset":2148},"end":{"line":81,"col":19,"offset":2166}},"content":"$hacked_deciphered"},{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":84,"col":1,"offset":2270},"end":{"line":84,"col":6,"offset":2275}},"content":"$user"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":92,"col":5,"offset":2466},"end":{"line":92,"col":27,"offset":2488}},"$user->user == \"sweep\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":92,"col":53,"offset":2514},"end":{"line":92,"col":76,"offset":2537},"extra":{"metavars":{"$VAR1":{"start":{"line":92,"col":53,"offset":2514},"end":{"line":92,"col":65,"offset":2526},"abstract_content":"$user->level"},"$VAR2":{"start":{"line":92,"col":69,"offset":2530},"end":{"line":92,"col":76,"offset":2537},"abstract_content":"\"admin\""}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"a4bf548fac8f696699ae79e2eac48709b4e525c994a69a3487e973bee30c6f67651fa96eea818d0e264432cb400815a84db2154235822c24e5a4cf1eeae86c0a_0","lines":"if ($user->user == \"sweep\" && $user->ex > time() && $user->level == \"admin\") {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":55,"col":15,"offset":1509},"end":{"line":55,"col":39,"offset":1533}},"bin2hex($sweep_ciphered)"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":55,"col":1,"offset":1495},"end":{"line":55,"col":4,"offset":1498}},"content":"$p1"},{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":60,"col":1,"offset":1765},"end":{"line":60,"col":3,"offset":1767}},"content":"$c"},{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":81,"col":1,"offset":2148},"end":{"line":81,"col":19,"offset":2166}},"content":"$hacked_deciphered"},{"location":{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":84,"col":1,"offset":2270},"end":{"line":84,"col":6,"offset":2275}},"content":"$user"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","start":{"line":92,"col":53,"offset":2514},"end":{"line":92,"col":76,"offset":2537}},"$user->level == \"admin\""]]},"engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"../../DVWA/vulnerabilities/csp/source/high.js","start":{"line":9,"col":3,"offset":209},"end":{"line":9,"col":63,"offset":269},"extra":{"metavars":{"$EL":{"start":{"line":9,"col":3,"offset":209},"end":{"line":9,"col":36,"offset":242},"abstract_content":"document.getElementById(\"answer\")"},"$HTML":{"start":{"line":9,"col":49,"offset":255},"end":{"line":9,"col":62,"offset":268},"abstract_content":"obj['answer']"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"cd6323dae5b60d0645ed4d69b2ccd93aaa0b6907fdf341bca8695c8750d48152a6b4747d341b18d80371dd72bdd256607077922ae238e7f5d62925072cdf4e72_0","lines":"\t\tdocument.getElementById(\"answer\").innerHTML = obj['answer'];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"../../DVWA/vulnerabilities/csp/source/impossible.js","start":{"line":9,"col":3,"offset":202},"end":{"line":9,"col":63,"offset":262},"extra":{"metavars":{"$EL":{"start":{"line":9,"col":3,"offset":202},"end":{"line":9,"col":36,"offset":235},"abstract_content":"document.getElementById(\"answer\")"},"$HTML":{"start":{"line":9,"col":49,"offset":248},"end":{"line":9,"col":62,"offset":261},"abstract_content":"obj['answer']"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"5b8bf208c48643f6e04366f683d896dfd24611364649c551b430d2be97a8cb443e7a9513896666a5ef2e28f02afc91c91185d9f6cbb1b7c28669218822909ccb_0","lines":"\t\tdocument.getElementById(\"answer\").innerHTML = obj['answer'];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag","path":"../../DVWA/vulnerabilities/csp/source/jsonp.php","start":{"line":12,"col":1,"offset":199},"end":{"line":12,"col":45,"offset":243},"extra":{"metavars":{"$1":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"GET"},"$REQ":{"start":{"line":5,"col":14,"offset":121},"end":{"line":5,"col":19,"offset":126},"abstract_content":"$_GET"}},"message":"Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.","metadata":{"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::http-params::lang","web::source::http-body::lang","web::sink::html-webpage::lang"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/language.basic-syntax.phptags.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag","shortlink":"https://sg.run/RlGe","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27193,"rule_id":"r6UA0y","rv_id":947718,"url":"https://semgrep.dev/playground/r/ExTg4yR/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag","version_id":"ExTg4yR"}}},"severity":"WARNING","fingerprint":"5b83e63a5e5df1d7fcec1fc318f30fe620f6da94249459cafad2646ca1ab900317dcac044ec525957bdafa3d6a1c01b11aa85ca27cb7af86faf442dea94d9642_0","lines":"echo $callback . \"(\".json_encode($outp).\")\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/csp/source/jsonp.php","start":{"line":5,"col":14,"offset":121},"end":{"line":5,"col":31,"offset":138}},"$_GET['callback']"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/csp/source/jsonp.php","start":{"line":5,"col":2,"offset":109},"end":{"line":5,"col":11,"offset":118}},"content":"$callback"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/csp/source/jsonp.php","start":{"line":12,"col":1,"offset":199},"end":{"line":12,"col":45,"offset":243}},"echo $callback . \"(\".json_encode($outp).\")\";"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/csrf/test_credentials.php","start":{"line":23,"col":17,"offset":824},"end":{"line":23,"col":48,"offset":855},"extra":{"metavars":{"$VAR1":{"start":{"line":23,"col":17,"offset":824},"end":{"line":23,"col":43,"offset":850},"abstract_content":"mysqli_num_rows($result)"},"$VAR2":{"start":{"line":23,"col":47,"offset":854},"end":{"line":23,"col":48,"offset":855},"abstract_content":"1"}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"896129d4f0dfe2ecf166081999f4af90c47aae272119882fc7c748cb310bc67770943e4c5406a9dadd4ffecd9a801a3a92370390a20c518b130cc7724e351758_0","lines":"\tif( $result && mysqli_num_rows( $result ) == 1 ) {    // Login Successful...","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/csrf/test_credentials.php","start":{"line":19,"col":10,"offset":544},"end":{"line":19,"col":22,"offset":556}},"md5( $pass )"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/csrf/test_credentials.php","start":{"line":19,"col":2,"offset":536},"end":{"line":19,"col":7,"offset":541}},"content":"$pass"},{"location":{"path":"../../DVWA/vulnerabilities/csrf/test_credentials.php","start":{"line":21,"col":12,"offset":572},"end":{"line":21,"col":13,"offset":573}},"content":"\""},{"location":{"path":"../../DVWA/vulnerabilities/csrf/test_credentials.php","start":{"line":21,"col":2,"offset":562},"end":{"line":21,"col":8,"offset":568}},"content":"$query"},{"location":{"path":"../../DVWA/vulnerabilities/csrf/test_credentials.php","start":{"line":22,"col":2,"offset":640},"end":{"line":22,"col":9,"offset":647}},"content":"$result"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/csrf/test_credentials.php","start":{"line":23,"col":17,"offset":824},"end":{"line":23,"col":48,"offset":855}},"mysqli_num_rows( $result ) == 1"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":3,"offset":548},"end":{"line":26,"col":43,"offset":588},"extra":{"metavars":{"$FUNC":{"start":{"line":26,"col":10,"offset":555},"end":{"line":26,"col":20,"offset":565},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"e4b9d57ce272072d88cfbcf8585cdb15aa2736dd3f6dce27cc15d6d5c2c23e5dd5d56fd31178e94433f06b5ef56a5c61b1d925690b2d49af336cf2b788f2b9f9_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":10,"offset":555},"end":{"line":26,"col":42,"offset":587},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"0d4869f0f2ff364df836db3f8535696e6e6fa60a775e0dce7ff4709248a5e9eb6325cb44640e44c5ddd88aea0c33216f4c344466381546d9f23bf589e534a407_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":10,"offset":555},"end":{"line":26,"col":42,"offset":587}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":10,"offset":555},"end":{"line":26,"col":42,"offset":587},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"0bfe3fb70e86d9a97786f7acfa1c81aae6e7e38f41bec5af6403ef97e528c4d7c39c4212e2b316c89ebe1baff7f4a1594befd40957d26fee265072cdd90ea66c_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":10,"offset":555},"end":{"line":26,"col":42,"offset":587}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":10,"offset":555},"end":{"line":26,"col":42,"offset":587},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"efbcb4179420f1e04bcd09d4885221fa27dc60cf353f43e79746c96666c07f42c2da0502ecb2b904e23ecb350587af7ca05e55c0bd2d397f024f9ec9ea155fec_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":10,"offset":555},"end":{"line":26,"col":42,"offset":587}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":22,"offset":567},"end":{"line":26,"col":40,"offset":585},"extra":{"metavars":{"$SINK":{"start":{"line":26,"col":22,"offset":567},"end":{"line":26,"col":40,"offset":585},"abstract_content":"'ping  '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"c1a2e4df407fb1f99167795478f6c11e98d901866f6c18e41aecfeb7a4fd90a2200660a5ecbeb02ce7eca0c1d2fca7111c98fc312c68e9514dc4eed3cd3d6f1b_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":26,"col":22,"offset":567},"end":{"line":26,"col":40,"offset":585}},"'ping  ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":3,"offset":616},"end":{"line":30,"col":48,"offset":661},"extra":{"metavars":{"$FUNC":{"start":{"line":30,"col":10,"offset":623},"end":{"line":30,"col":20,"offset":633},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"e4b9d57ce272072d88cfbcf8585cdb15aa2736dd3f6dce27cc15d6d5c2c23e5dd5d56fd31178e94433f06b5ef56a5c61b1d925690b2d49af336cf2b788f2b9f9_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":10,"offset":623},"end":{"line":30,"col":47,"offset":660},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"0d4869f0f2ff364df836db3f8535696e6e6fa60a775e0dce7ff4709248a5e9eb6325cb44640e44c5ddd88aea0c33216f4c344466381546d9f23bf589e534a407_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":10,"offset":623},"end":{"line":30,"col":47,"offset":660}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":10,"offset":623},"end":{"line":30,"col":47,"offset":660},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"0bfe3fb70e86d9a97786f7acfa1c81aae6e7e38f41bec5af6403ef97e528c4d7c39c4212e2b316c89ebe1baff7f4a1594befd40957d26fee265072cdd90ea66c_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":10,"offset":623},"end":{"line":30,"col":47,"offset":660}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":10,"offset":623},"end":{"line":30,"col":47,"offset":660},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"efbcb4179420f1e04bcd09d4885221fa27dc60cf353f43e79746c96666c07f42c2da0502ecb2b904e23ecb350587af7ca05e55c0bd2d397f024f9ec9ea155fec_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":10,"offset":623},"end":{"line":30,"col":47,"offset":660}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":22,"offset":635},"end":{"line":30,"col":45,"offset":658},"extra":{"metavars":{"$SINK":{"start":{"line":30,"col":22,"offset":635},"end":{"line":30,"col":45,"offset":658},"abstract_content":"'ping  -c 4 '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"21902e817a5ee4e7f7358b067062cb78d95035837f09e6030637bbcb32da27f369ca45fa5616edec74c85ede22bf16a8a1ab91d90211caefd76898ff554b4840_0","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":17,"offset":78},"end":{"line":5,"col":26,"offset":87}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/high.php","start":{"line":30,"col":22,"offset":635},"end":{"line":30,"col":45,"offset":658}},"'ping  -c 4 ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":4,"offset":775},"end":{"line":22,"col":44,"offset":815},"extra":{"metavars":{"$FUNC":{"start":{"line":22,"col":11,"offset":782},"end":{"line":22,"col":21,"offset":792},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"a0c5b5014ceb9d4d676e5d67c5cdc0ca8462bca27faad21837413c8d197d4f35aaa682aa1a29e894d9587afe87d8274373649c3c9211b8df4cefcbabda7a51e5_0","lines":"\t\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":11,"offset":782},"end":{"line":22,"col":43,"offset":814},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"b24fcce2150723830d9270f132977f05b1e91deaa2115dd720c96cbc8c102c9f89077a16b889a319da64a5ea7ef52770561f10f4f011193f51f30cb47ccc0dec_0","lines":"\t\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":11,"offset":782},"end":{"line":22,"col":43,"offset":814}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":11,"offset":782},"end":{"line":22,"col":43,"offset":814},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"68fd33942b1334018f2dab1dd868f2d1d93a9a58d91c2765403e2a8d546e885f9e58662d6c88f92b45094e198fbbb894ffe7a899106eec862af509131f1bce0e_0","lines":"\t\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":11,"offset":782},"end":{"line":22,"col":43,"offset":814}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":11,"offset":782},"end":{"line":22,"col":43,"offset":814},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"861024d1dd91ff2e5e29e3273a83068f8b50be52e2f62a6f6c9a330511c294586ed80a5ba52ee79b2f4b7b643cdcdd35409cf2d5fa5b31ec8384e20bc204721f_0","lines":"\t\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":11,"offset":782},"end":{"line":22,"col":43,"offset":814}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":23,"offset":794},"end":{"line":22,"col":41,"offset":812},"extra":{"metavars":{"$SINK":{"start":{"line":22,"col":23,"offset":794},"end":{"line":22,"col":41,"offset":812},"abstract_content":"'ping  '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"0aa4778959427c825a747c033c8e5d459054030d9508f74c6955257dcc6320a116190f0add418ed0099b884894f29d6581b54d284c4f82f3f0c519f35d9f3168_0","lines":"\t\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":22,"col":23,"offset":794},"end":{"line":22,"col":41,"offset":812}},"'ping  ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":4,"offset":847},"end":{"line":26,"col":49,"offset":892},"extra":{"metavars":{"$FUNC":{"start":{"line":26,"col":11,"offset":854},"end":{"line":26,"col":21,"offset":864},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"a0c5b5014ceb9d4d676e5d67c5cdc0ca8462bca27faad21837413c8d197d4f35aaa682aa1a29e894d9587afe87d8274373649c3c9211b8df4cefcbabda7a51e5_1","lines":"\t\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":11,"offset":854},"end":{"line":26,"col":48,"offset":891},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"b24fcce2150723830d9270f132977f05b1e91deaa2115dd720c96cbc8c102c9f89077a16b889a319da64a5ea7ef52770561f10f4f011193f51f30cb47ccc0dec_1","lines":"\t\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":11,"offset":854},"end":{"line":26,"col":48,"offset":891}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":11,"offset":854},"end":{"line":26,"col":48,"offset":891},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"68fd33942b1334018f2dab1dd868f2d1d93a9a58d91c2765403e2a8d546e885f9e58662d6c88f92b45094e198fbbb894ffe7a899106eec862af509131f1bce0e_1","lines":"\t\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":11,"offset":854},"end":{"line":26,"col":48,"offset":891}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":11,"offset":854},"end":{"line":26,"col":48,"offset":891},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"861024d1dd91ff2e5e29e3273a83068f8b50be52e2f62a6f6c9a330511c294586ed80a5ba52ee79b2f4b7b643cdcdd35409cf2d5fa5b31ec8384e20bc204721f_1","lines":"\t\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":11,"offset":854},"end":{"line":26,"col":48,"offset":891}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":23,"offset":866},"end":{"line":26,"col":46,"offset":889},"extra":{"metavars":{"$SINK":{"start":{"line":26,"col":23,"offset":866},"end":{"line":26,"col":46,"offset":889},"abstract_content":"'ping  -c 4 '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"b1708efe91e5a657cffbfe65b22b3f9c0a48007d515a5b445890fc0783a9053b1e1b5c8bb7a8b5096d5d03d09dd70927741db9f763baa723629d5a3844cf16b0_0","lines":"\t\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":12,"offset":188},"end":{"line":8,"col":21,"offset":197}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":8,"col":2,"offset":178},"end":{"line":8,"col":9,"offset":185}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/impossible.php","start":{"line":26,"col":23,"offset":866},"end":{"line":26,"col":46,"offset":889}},"'ping  -c 4 ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":3,"offset":211},"end":{"line":10,"col":43,"offset":251},"extra":{"metavars":{"$FUNC":{"start":{"line":10,"col":10,"offset":218},"end":{"line":10,"col":20,"offset":228},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"efd100d262e7d05b53dd6653497997d189da076ff5de0ad075ef4c59971f5a76c6908564c37191edc8ae809c3896118688cb81cedf01d70e442e04ece986ebef_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":10,"offset":218},"end":{"line":10,"col":42,"offset":250},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"2f360a7f585df002d9ff617300fedcd7b1bb70d507ca42bc6278aa17f161636d685ba3c138dc85f3de80bc9b42e841a92b108b46afe78aeb5aeaa1bbb64ccd4c_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":10,"offset":218},"end":{"line":10,"col":42,"offset":250}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":10,"offset":218},"end":{"line":10,"col":42,"offset":250},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"3c9975eb1de353093540a34cb8e9885fce467c3f04cba5f1d9b2d8c8c2c8db317ee0070e81a010623aba08184e1e7aa4147607fed80eb8119433b67fc0bacb59_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":10,"offset":218},"end":{"line":10,"col":42,"offset":250}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":10,"offset":218},"end":{"line":10,"col":42,"offset":250},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"d71572bc9c49036902d2ce45018c27863b19cfc07dd1e5b5c83ec22aae5687c6cca26d35e3d7c7ae9c6bd22ced5d59cf1b8f0ae219f439fd01f39d82c7fc4441_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":10,"offset":218},"end":{"line":10,"col":42,"offset":250}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":22,"offset":230},"end":{"line":10,"col":40,"offset":248},"extra":{"metavars":{"$SINK":{"start":{"line":10,"col":22,"offset":230},"end":{"line":10,"col":40,"offset":248},"abstract_content":"'ping  '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"32cf6be2fda3c9e0a85554e121cbf851c5fa54bc1b7ff05f3dcec2fafcc917338f35c8a005ecf6f556e61ac292247ef93f5fe56856390bcf21533dcf624c95d9_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":10,"col":22,"offset":230},"end":{"line":10,"col":40,"offset":248}},"'ping  ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":3,"offset":279},"end":{"line":14,"col":48,"offset":324},"extra":{"metavars":{"$FUNC":{"start":{"line":14,"col":10,"offset":286},"end":{"line":14,"col":20,"offset":296},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"efd100d262e7d05b53dd6653497997d189da076ff5de0ad075ef4c59971f5a76c6908564c37191edc8ae809c3896118688cb81cedf01d70e442e04ece986ebef_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":10,"offset":286},"end":{"line":14,"col":47,"offset":323},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"2f360a7f585df002d9ff617300fedcd7b1bb70d507ca42bc6278aa17f161636d685ba3c138dc85f3de80bc9b42e841a92b108b46afe78aeb5aeaa1bbb64ccd4c_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":10,"offset":286},"end":{"line":14,"col":47,"offset":323}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":10,"offset":286},"end":{"line":14,"col":47,"offset":323},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"3c9975eb1de353093540a34cb8e9885fce467c3f04cba5f1d9b2d8c8c2c8db317ee0070e81a010623aba08184e1e7aa4147607fed80eb8119433b67fc0bacb59_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":10,"offset":286},"end":{"line":14,"col":47,"offset":323}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":10,"offset":286},"end":{"line":14,"col":47,"offset":323},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"d71572bc9c49036902d2ce45018c27863b19cfc07dd1e5b5c83ec22aae5687c6cca26d35e3d7c7ae9c6bd22ced5d59cf1b8f0ae219f439fd01f39d82c7fc4441_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":10,"offset":286},"end":{"line":14,"col":47,"offset":323}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":22,"offset":298},"end":{"line":14,"col":45,"offset":321},"extra":{"metavars":{"$SINK":{"start":{"line":14,"col":22,"offset":298},"end":{"line":14,"col":45,"offset":321},"abstract_content":"'ping  -c 4 '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"b2f97c6d589e61a525e7bbe41eea458b6ab327e6285af52d75e8a4ac23f8ef91b0449dde09ed27c74f2320b038c5dc823b7a85a9642bc4150979af2f6fce9674_0","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/low.php","start":{"line":14,"col":22,"offset":298},"end":{"line":14,"col":45,"offset":321}},"'ping  -c 4 ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":3,"offset":437},"end":{"line":19,"col":43,"offset":477},"extra":{"metavars":{"$FUNC":{"start":{"line":19,"col":10,"offset":444},"end":{"line":19,"col":20,"offset":454},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"499ff40e83323bc0e0105dc7ef81872f396cf988e1de90f755565699dfd8bb2b72d56877aa41231fa46a2a9f51c2b24f5851aea1b463a9de2d86c6b25c2a9d03_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":10,"offset":444},"end":{"line":19,"col":42,"offset":476},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"145edba558211ed3a1679d78aa8e1614d1b9967f139446b6aba5a56e74ac2deb356d16b41d472ce8bdcf9066a89e170064bf1661b57b7223bf25c1728085adbb_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":10,"offset":444},"end":{"line":19,"col":42,"offset":476}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":10,"offset":444},"end":{"line":19,"col":42,"offset":476},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"a89584ab692c8413ff09b588f419f6b9db92bf951d816d8bb4adf68436fce7dcf27b8126554d7a41a03b6bac0899af6269b23b0456826dc1288340e60a8f21ec_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":10,"offset":444},"end":{"line":19,"col":42,"offset":476}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":10,"offset":444},"end":{"line":19,"col":42,"offset":476},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"8b1e80ac1b36ec5a60ca1d28c8bac1c5e33a77ec761b95bf853ca285007c6c7ed701b4b7dd7050689f4d397e659ca2c4643f13ce5e5a96e8b6f031663f3405ff_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":10,"offset":444},"end":{"line":19,"col":42,"offset":476}},"shell_exec( 'ping  ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":22,"offset":456},"end":{"line":19,"col":40,"offset":474},"extra":{"metavars":{"$SINK":{"start":{"line":19,"col":22,"offset":456},"end":{"line":19,"col":40,"offset":474},"abstract_content":"'ping  '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"f1c2d1210eadbed9441ef69b3ec0c65b5f3a17ce5d2aa22c1290dc7d2f268fac361f3efda58ab17ec445300ab9ba49da885d2356bd316777f9208a1fbd772113_0","lines":"\t\t$cmd = shell_exec( 'ping  ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":19,"col":22,"offset":456},"end":{"line":19,"col":40,"offset":474}},"'ping  ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.exec-use.exec-use","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":3,"offset":505},"end":{"line":23,"col":48,"offset":550},"extra":{"metavars":{"$FUNC":{"start":{"line":23,"col":10,"offset":512},"end":{"line":23,"col":20,"offset":522},"abstract_content":"shell_exec"}},"message":"Executing non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.exec-use.exec-use","shortlink":"https://sg.run/5Q1j","semgrep.dev":{"rule":{"origin":"community","r_id":9391,"rule_id":"qNUjye","rv_id":945992,"url":"https://semgrep.dev/playground/r/kbTYkBG/php.lang.security.exec-use.exec-use","version_id":"kbTYkBG"}}},"severity":"ERROR","fingerprint":"499ff40e83323bc0e0105dc7ef81872f396cf988e1de90f755565699dfd8bb2b72d56877aa41231fa46a2a9f51c2b24f5851aea1b463a9de2d86c6b25c2a9d03_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":10,"offset":512},"end":{"line":23,"col":47,"offset":549},"extra":{"metavars":{},"message":"User input is passed to a function that executes a shell command. This can lead to remote code execution.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"impact":"HIGH","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-exec.tainted-exec","shortlink":"https://sg.run/kxEEz","semgrep.dev":{"rule":{"origin":"community","r_id":146572,"rule_id":"10UOGG5","rv_id":945998,"url":"https://semgrep.dev/playground/r/d6TPj0R/php.lang.security.injection.tainted-exec.tainted-exec","version_id":"d6TPj0R"}}},"severity":"WARNING","fingerprint":"145edba558211ed3a1679d78aa8e1614d1b9967f139446b6aba5a56e74ac2deb356d16b41d472ce8bdcf9066a89e170064bf1661b57b7223bf25c1728085adbb_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":10,"offset":512},"end":{"line":23,"col":47,"offset":549}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-command-injection.tainted-command-injection","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":10,"offset":512},"end":{"line":23,"col":47,"offset":549},"extra":{"metavars":{},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","os::sink::os-command-or-thread::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection","shortlink":"https://sg.run/Bpj2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27195,"rule_id":"NbUzg9","rv_id":1014948,"url":"https://semgrep.dev/playground/r/YDTv3vq/php.lang.security.tainted-command-injection.tainted-command-injection","version_id":"YDTv3vq"}}},"severity":"CRITICAL","fingerprint":"a89584ab692c8413ff09b588f419f6b9db92bf951d816d8bb4adf68436fce7dcf27b8126554d7a41a03b6bac0899af6269b23b0456826dc1288340e60a8f21ec_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":10,"offset":512},"end":{"line":23,"col":47,"offset":549}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-exec.tainted-exec","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":10,"offset":512},"end":{"line":23,"col":47,"offset":549},"extra":{"metavars":{},"message":"Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.","metadata":{"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"references":["https://www.stackhawk.com/blog/php-command-injection/","https://brightsec.com/blog/code-injection-php/","https://www.acunetix.com/websitesecurity/php-security-2/"],"category":"security","technology":["php"],"owasp":["A03:2021 - Injection"],"cwe2022-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec","shortlink":"https://sg.run/JAkP","semgrep.dev":{"rule":{"origin":"community","r_id":73146,"rule_id":"9AUw06","rv_id":946014,"url":"https://semgrep.dev/playground/r/A8TJzKg/php.lang.security.tainted-exec.tainted-exec","version_id":"A8TJzKg"}}},"severity":"ERROR","fingerprint":"8b1e80ac1b36ec5a60ca1d28c8bac1c5e33a77ec761b95bf853ca285007c6c7ed701b4b7dd7050689f4d397e659ca2c4643f13ce5e5a96e8b6f031663f3405ff_1","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":10,"offset":512},"end":{"line":23,"col":47,"offset":549}},"shell_exec( 'ping  -c 4 ' . $target )"]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-command-injection.laravel-command-injection","path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":22,"offset":524},"end":{"line":23,"col":45,"offset":547},"extra":{"metavars":{"$SINK":{"start":{"line":23,"col":22,"offset":524},"end":{"line":23,"col":45,"offset":547},"abstract_content":"'ping  -c 4 '.$target"}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.","metadata":{"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","os::sink::os-command-or-thread::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://www.php.net/manual/en/ref.exec.php","https://www.php.net/manual/en/ref.filesystem.php"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection","shortlink":"https://sg.run/JPYR","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36402,"rule_id":"3qUbw4","rv_id":947732,"url":"https://semgrep.dev/playground/r/BjT1B4y/php.laravel.security.laravel-command-injection.laravel-command-injection","version_id":"BjT1B4y"}}},"severity":"WARNING","fingerprint":"05868a246ebabfe5c1f32e04f97a24b5cb00373a8b16d52b0766f110fa9596f1a375718fc4084fccaa35f2172ce9d5d65beee94bd17a9a8f21582f59707006ad_0","lines":"\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":12,"offset":73},"end":{"line":5,"col":21,"offset":82}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":9,"offset":70}},"content":"$target"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/exec/source/medium.php","start":{"line":23,"col":22,"offset":524},"end":{"line":23,"col":45,"offset":547}},"'ping  -c 4 ' . $target"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/fi/source/high.php","start":{"line":7,"col":24,"offset":113},"end":{"line":7,"col":29,"offset":118},"extra":{"metavars":{"$PATTERN":{"start":{"line":7,"col":15,"offset":104},"end":{"line":7,"col":22,"offset":111},"abstract_content":"\"file*\""},"$FILENAME":{"start":{"line":7,"col":24,"offset":113},"end":{"line":7,"col":29,"offset":118},"abstract_content":"$file","propagated_value":{"svalue_start":{"line":4,"col":9,"offset":49},"svalue_end":{"line":4,"col":24,"offset":64},"svalue_abstract_content":"$_GET['page']"}}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"665807584144a092e524c71cb0f2a245f83c1b2ffe614f8e954b551614914815a51c19db1c85f196c136b0774f1bd6c69853e9889547f3c225b232bea8b07f20_0","lines":"if( !fnmatch( \"file*\", $file ) && $file != \"include.php\" ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/fi/source/high.php","start":{"line":4,"col":9,"offset":49},"end":{"line":4,"col":14,"offset":54}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/fi/source/high.php","start":{"line":4,"col":1,"offset":41},"end":{"line":4,"col":6,"offset":46}},"content":"$file"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/fi/source/high.php","start":{"line":7,"col":24,"offset":113},"end":{"line":7,"col":29,"offset":118}},"$file"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/javascript/index.php","start":{"line":43,"col":10,"offset":1097},"end":{"line":43,"col":45,"offset":1132},"extra":{"metavars":{"$VAR1":{"start":{"line":43,"col":10,"offset":1097},"end":{"line":43,"col":16,"offset":1103},"abstract_content":"$token","propagated_value":{"svalue_start":{"line":38,"col":12,"offset":986},"svalue_end":{"line":38,"col":27,"offset":1001},"svalue_abstract_content":"$_POST['token']"}},"$VAR2":{"start":{"line":43,"col":20,"offset":1107},"end":{"line":43,"col":45,"offset":1132},"abstract_content":"md5(str_rot13(\"success\"))"}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"c7502ed2797c3d24015f53998390a9d80b1a75809a0a22c5fc3d988e92d0fc7d3b4c2ed46bb4e08003815b8a090a4a7097bcb8d3d112790ed0fe6fd4c57102d2_0","lines":"\t\t\t\t\tif ($token == md5(str_rot13(\"success\"))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/javascript/index.php","start":{"line":43,"col":20,"offset":1107},"end":{"line":43,"col":45,"offset":1132}},"md5(str_rot13(\"success\"))"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/javascript/index.php","start":{"line":43,"col":10,"offset":1097},"end":{"line":43,"col":45,"offset":1132}},"$token == md5(str_rot13(\"success\"))"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.md5-loose-equality.md5-loose-equality","path":"../../DVWA/vulnerabilities/javascript/index.php","start":{"line":57,"col":10,"offset":1487},"end":{"line":57,"col":83,"offset":1560},"extra":{"metavars":{"$VAR1":{"start":{"line":57,"col":10,"offset":1487},"end":{"line":57,"col":16,"offset":1493},"abstract_content":"$token","propagated_value":{"svalue_start":{"line":38,"col":12,"offset":986},"svalue_end":{"line":38,"col":27,"offset":1001},"svalue_abstract_content":"$_POST['token']"}},"$VAR2":{"start":{"line":57,"col":20,"offset":1497},"end":{"line":57,"col":83,"offset":1560},"abstract_content":"hash(\"sha256\"hash(\"sha256\"\"XX\".strrev(\"success\")).\"ZZ\")"}},"message":"Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type juggling issues","metadata":{"cwe":["CWE-697: Incorrect Comparison"],"references":["https://www.php.net/manual/en/types.comparisons.php","https://web.archive.org/web/20210430183236/https://www.whitehatsec.com/blog/magic-hashes/"],"category":"security","technology":["php"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/php.lang.security.md5-loose-equality.md5-loose-equality","shortlink":"https://sg.run/Do4G","semgrep.dev":{"rule":{"origin":"community","r_id":9396,"rule_id":"GdU7RO","rv_id":1024161,"url":"https://semgrep.dev/playground/r/9lTWdQq/php.lang.security.md5-loose-equality.md5-loose-equality","version_id":"9lTWdQq"}}},"severity":"ERROR","fingerprint":"040fdc7f430a8457f32b695a31ea68f515e86e9c5119adca28122a5f341defcbc0a7862da89806c7455363d35706de8b745b37f9da919cbd64593eba25f90ecd_0","lines":"\t\t\t\t\tif ($token == hash(\"sha256\", hash(\"sha256\", \"XX\" . strrev(\"success\")) . \"ZZ\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/javascript/index.php","start":{"line":57,"col":20,"offset":1497},"end":{"line":57,"col":83,"offset":1560}},"hash(\"sha256\", hash(\"sha256\", \"XX\" . strrev(\"success\")) . \"ZZ\")"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/javascript/index.php","start":{"line":57,"col":10,"offset":1487},"end":{"line":57,"col":83,"offset":1560}},"$token == hash(\"sha256\", hash(\"sha256\", \"XX\" . strrev(\"success\")) . \"ZZ\")"]]},"engine_kind":"OSS"}},{"check_id":"javascript.browser.security.eval-detected.eval-detected","path":"../../DVWA/vulnerabilities/javascript/source/high.js","start":{"line":1,"col":9843,"offset":9842},"end":{"line":1,"col":10417,"offset":10416},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing","section":"V5 Validation, Sanitization and Encoding","version":"4"},"category":"security","technology":["browser"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected","shortlink":"https://sg.run/7ope","semgrep.dev":{"rule":{"origin":"community","r_id":9238,"rule_id":"GdU7dw","rv_id":945778,"url":"https://semgrep.dev/playground/r/o5TZePx/javascript.browser.security.eval-detected.eval-detected","version_id":"o5TZePx"}}},"severity":"WARNING","fingerprint":"c65b2830438b92e591cab7e81a6cb0f87d4accf0604d155f7368fa5014291fcce58bc033045fb548d2e95e660e89247984525a250a9355a6b0eef608299cf4a6_0","lines":"var a=['fromCharCode','toString','replace','BeJ','\\x5cw+','Lyg','SuR','(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&&1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&&1c\\x202d===\\x271n\\x27&&2d.2Q&&2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&&1c\\x202g===\\x271n\\x27&&2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&&2l.3P;q\\x201y=!Y.3H&&1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&&(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&&1x.1w&&1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M<W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M<W&&i<1k;++M){l[i>>2]|=s[M]<<U[i++&3]}}z{1g(i=k.1A;M<W&&i<1k;++M){r=s.1Q(M);p(r<R){l[i>>2]|=r<<U[i++&3]}z\\x20p(r<2v){l[i>>2]|=(2t|(r>>6))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z\\x20p(r<2A||r>=2E){l[i>>2]|=(2D|(r>>12))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z{r=2C+(((r&23)<<10)|(s.1Q(++M)&23));l[i>>2]|=(2X|(r>>18))<<U[i++&3];l[i>>2]|=(R|((r>>12)&V))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}}}k.2u=i;k.L+=i-k.1A;p(i>=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L>4r){k.2i+=k.L/2H<<0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i>>2]|=2w[i&3];k.1C=l[16];p(i>=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i<<3|k.L>>>29;l[15]=k.L<<3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j<1k;++j){v=l[j-15];1a=((v>>>7)|(v<<25))^((v>>>18)|(v<<14))^(v>>>3);v=l[j-2];1b=((v>>>17)|(v<<15))^((v>>>19)|(v<<13))^(v>>>10);l[j]=l[j-16]+1a+l[j-7]+1b<<0}1D=b&c;1g(j=0;j<1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o<<0;d=v+4p<<0}z{1B=4v;v=l[0]-4w;h=v-4G<<0;d=v+4D<<0}k.2j=1O}z{1a=((a>>>2)|(a<<30))^((a>>>13)|(a<<19))^((a>>>22)|(a<<10));1b=((e>>>6)|(e<<26))^((e>>>11)|(e<<21))^((e>>>25)|(e<<7));1B=a&b;1j=1B^(a&c)^1D;1h=(e&f)^(~e&g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v<<0;d=v+1f<<0}1a=((d>>>2)|(d<<30))^((d>>>13)|(d<<19))^((d>>>22)|(d<<10));1b=((h>>>6)|(h<<26))^((h>>>11)|(h<<21))^((h>>>25)|(h<<7));1Z=d&a;1j=1Z^(d&b)^1B;1h=(h&e)^(~h&f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v<<0;c=v+1f<<0;1a=((c>>>2)|(c<<30))^((c>>>13)|(c<<19))^((c>>>22)|(c<<10));1b=((g>>>6)|(g<<26))^((g>>>11)|(g<<21))^((g>>>25)|(g<<7));1V=c&d;1j=1V^(c&a)^1Z;1h=(g&h)^(~g&e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v<<0;b=v+1f<<0;1a=((b>>>2)|(b<<30))^((b>>>13)|(b<<19))^((b>>>22)|(b<<10));1b=((f>>>6)|(f<<26))^((f>>>11)|(f<<21))^((f>>>25)|(f<<7));1D=b&c;1j=1D^(b&d)^1V;1h=(f&g)^(~f&h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v<<0;a=v+1f<<0}k.C=k.C+a<<0;k.B=k.B+b<<0;k.E=k.E+c<<0;k.F=k.F+d<<0;k.J=k.J+e<<0;k.I=k.I+f<<0;k.H=k.H+g<<0;k.D=k.D+h<<0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C>>28)&o]+m[(C>>24)&o]+m[(C>>20)&o]+m[(C>>16)&o]+m[(C>>12)&o]+m[(C>>8)&o]+m[(C>>4)&o]+m[C&o]+m[(B>>28)&o]+m[(B>>24)&o]+m[(B>>20)&o]+m[(B>>16)&o]+m[(B>>12)&o]+m[(B>>8)&o]+m[(B>>4)&o]+m[B&o]+m[(E>>28)&o]+m[(E>>24)&o]+m[(E>>20)&o]+m[(E>>16)&o]+m[(E>>12)&o]+m[(E>>8)&o]+m[(E>>4)&o]+m[E&o]+m[(F>>28)&o]+m[(F>>24)&o]+m[(F>>20)&o]+m[(F>>16)&o]+m[(F>>12)&o]+m[(F>>8)&o]+m[(F>>4)&o]+m[F&o]+m[(J>>28)&o]+m[(J>>24)&o]+m[(J>>20)&o]+m[(J>>16)&o]+m[(J>>12)&o]+m[(J>>8)&o]+m[(J>>4)&o]+m[J&o]+m[(I>>28)&o]+m[(I>>24)&o]+m[(I>>20)&o]+m[(I>>16)&o]+m[(I>>12)&o]+m[(I>>8)&o]+m[(I>>4)&o]+m[I&o]+m[(H>>28)&o]+m[(H>>24)&o]+m[(H>>20)&o]+m[(H>>16)&o]+m[(H>>12)&o]+m[(H>>8)&o]+m[(H>>4)&o]+m[H&o];p(!k.x){1e+=m[(D>>28)&o]+m[(D>>24)&o]+m[(D>>20)&o]+m[(D>>16)&o]+m[(D>>12)&o]+m[(D>>8)&o]+m[(D>>4)&o]+m[D&o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C>>24)&u,(C>>16)&u,(C>>8)&u,C&u,(B>>24)&u,(B>>16)&u,(B>>8)&u,B&u,(E>>24)&u,(E>>16)&u,(E>>8)&u,E&u,(F>>24)&u,(F>>16)&u,(F>>8)&u,F&u,(J>>24)&u,(J>>16)&u,(J>>8)&u,J&u,(I>>24)&u,(I>>16)&u,(I>>8)&u,I&u,(H>>24)&u,(H>>16)&u,(H>>8)&u,H&u];p(!k.x){2b.4A((D>>24)&u,(D>>16)&u,(D>>8)&u,D&u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i<W;++i){r=G.1Q(i);p(r<R){L[M++]=r}z\\x20p(r<2v){L[M++]=(2t|(r>>6));L[M++]=(R|(r&V))}z\\x20p(r<2A||r>=2E){L[M++]=(2D|(r>>12));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}z{r=2C+(((r&23)<<10)|(G.1Q(++i)&23));L[M++]=(2X|(r>>18));L[M++]=(R|((r>>12)&V));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W>1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i<1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n>=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);','||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW','split'];(function(c,d){var e=function(f){while(--f){c['push'](c['shift']());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j<e?'':h(parseInt(j/e)))+((j=j%e)>0x23?String[b('0x0')](j+0x1d):j[b('0x1')](0x24));};if(!''[b('0x2')](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if('wpA'!==b('0x3')){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b('0x4');};f=0x1;}}];h=function(){return b('0x4');};f=0x1;};while(f--){if(g[f]){if(b('0x5')===b('0x6')){return i[h];}else{d=d[b('0x2')](new RegExp('\\x5cb'+h(f)+'\\x5cb','g'),g[f]);}}}return d;}(b('0x7'),0x3e,0x137,b('0x8')[b('0x9')]('|'),0x0,{}));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","path":"../../DVWA/vulnerabilities/javascript/source/high.js","start":{"line":1,"col":10308,"offset":10307},"end":{"line":1,"col":10344,"offset":10343},"extra":{"metavars":{"$ARG":{"start":{"line":1,"col":9861,"offset":9860},"end":{"line":1,"col":9862,"offset":9861},"abstract_content":"f"}},"message":"RegExp() called with a `f` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","metadata":{"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"cwe":["CWE-1333: Inefficient Regular Expression Complexity"],"references":["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js","category":"security","technology":["javascript"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Denial-of-Service (DoS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","shortlink":"https://sg.run/gr65","semgrep.dev":{"rule":{"origin":"community","r_id":12685,"rule_id":"zdU1gD","rv_id":945869,"url":"https://semgrep.dev/playground/r/A8TJz19/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","version_id":"A8TJz19"}}},"severity":"WARNING","fingerprint":"01f76ee3fe486a7731a55a115f7c665575e6826b5e8c8701d5998755ce783cc83f718b83151ccc55b8111186804c89c36d0c8baa6966adec89d5464f69dad167_0","lines":"var a=['fromCharCode','toString','replace','BeJ','\\x5cw+','Lyg','SuR','(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&&1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&&1c\\x202d===\\x271n\\x27&&2d.2Q&&2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&&1c\\x202g===\\x271n\\x27&&2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&&2l.3P;q\\x201y=!Y.3H&&1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&&(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&&1x.1w&&1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M<W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M<W&&i<1k;++M){l[i>>2]|=s[M]<<U[i++&3]}}z{1g(i=k.1A;M<W&&i<1k;++M){r=s.1Q(M);p(r<R){l[i>>2]|=r<<U[i++&3]}z\\x20p(r<2v){l[i>>2]|=(2t|(r>>6))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z\\x20p(r<2A||r>=2E){l[i>>2]|=(2D|(r>>12))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z{r=2C+(((r&23)<<10)|(s.1Q(++M)&23));l[i>>2]|=(2X|(r>>18))<<U[i++&3];l[i>>2]|=(R|((r>>12)&V))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}}}k.2u=i;k.L+=i-k.1A;p(i>=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L>4r){k.2i+=k.L/2H<<0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i>>2]|=2w[i&3];k.1C=l[16];p(i>=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i<<3|k.L>>>29;l[15]=k.L<<3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j<1k;++j){v=l[j-15];1a=((v>>>7)|(v<<25))^((v>>>18)|(v<<14))^(v>>>3);v=l[j-2];1b=((v>>>17)|(v<<15))^((v>>>19)|(v<<13))^(v>>>10);l[j]=l[j-16]+1a+l[j-7]+1b<<0}1D=b&c;1g(j=0;j<1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o<<0;d=v+4p<<0}z{1B=4v;v=l[0]-4w;h=v-4G<<0;d=v+4D<<0}k.2j=1O}z{1a=((a>>>2)|(a<<30))^((a>>>13)|(a<<19))^((a>>>22)|(a<<10));1b=((e>>>6)|(e<<26))^((e>>>11)|(e<<21))^((e>>>25)|(e<<7));1B=a&b;1j=1B^(a&c)^1D;1h=(e&f)^(~e&g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v<<0;d=v+1f<<0}1a=((d>>>2)|(d<<30))^((d>>>13)|(d<<19))^((d>>>22)|(d<<10));1b=((h>>>6)|(h<<26))^((h>>>11)|(h<<21))^((h>>>25)|(h<<7));1Z=d&a;1j=1Z^(d&b)^1B;1h=(h&e)^(~h&f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v<<0;c=v+1f<<0;1a=((c>>>2)|(c<<30))^((c>>>13)|(c<<19))^((c>>>22)|(c<<10));1b=((g>>>6)|(g<<26))^((g>>>11)|(g<<21))^((g>>>25)|(g<<7));1V=c&d;1j=1V^(c&a)^1Z;1h=(g&h)^(~g&e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v<<0;b=v+1f<<0;1a=((b>>>2)|(b<<30))^((b>>>13)|(b<<19))^((b>>>22)|(b<<10));1b=((f>>>6)|(f<<26))^((f>>>11)|(f<<21))^((f>>>25)|(f<<7));1D=b&c;1j=1D^(b&d)^1V;1h=(f&g)^(~f&h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v<<0;a=v+1f<<0}k.C=k.C+a<<0;k.B=k.B+b<<0;k.E=k.E+c<<0;k.F=k.F+d<<0;k.J=k.J+e<<0;k.I=k.I+f<<0;k.H=k.H+g<<0;k.D=k.D+h<<0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C>>28)&o]+m[(C>>24)&o]+m[(C>>20)&o]+m[(C>>16)&o]+m[(C>>12)&o]+m[(C>>8)&o]+m[(C>>4)&o]+m[C&o]+m[(B>>28)&o]+m[(B>>24)&o]+m[(B>>20)&o]+m[(B>>16)&o]+m[(B>>12)&o]+m[(B>>8)&o]+m[(B>>4)&o]+m[B&o]+m[(E>>28)&o]+m[(E>>24)&o]+m[(E>>20)&o]+m[(E>>16)&o]+m[(E>>12)&o]+m[(E>>8)&o]+m[(E>>4)&o]+m[E&o]+m[(F>>28)&o]+m[(F>>24)&o]+m[(F>>20)&o]+m[(F>>16)&o]+m[(F>>12)&o]+m[(F>>8)&o]+m[(F>>4)&o]+m[F&o]+m[(J>>28)&o]+m[(J>>24)&o]+m[(J>>20)&o]+m[(J>>16)&o]+m[(J>>12)&o]+m[(J>>8)&o]+m[(J>>4)&o]+m[J&o]+m[(I>>28)&o]+m[(I>>24)&o]+m[(I>>20)&o]+m[(I>>16)&o]+m[(I>>12)&o]+m[(I>>8)&o]+m[(I>>4)&o]+m[I&o]+m[(H>>28)&o]+m[(H>>24)&o]+m[(H>>20)&o]+m[(H>>16)&o]+m[(H>>12)&o]+m[(H>>8)&o]+m[(H>>4)&o]+m[H&o];p(!k.x){1e+=m[(D>>28)&o]+m[(D>>24)&o]+m[(D>>20)&o]+m[(D>>16)&o]+m[(D>>12)&o]+m[(D>>8)&o]+m[(D>>4)&o]+m[D&o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C>>24)&u,(C>>16)&u,(C>>8)&u,C&u,(B>>24)&u,(B>>16)&u,(B>>8)&u,B&u,(E>>24)&u,(E>>16)&u,(E>>8)&u,E&u,(F>>24)&u,(F>>16)&u,(F>>8)&u,F&u,(J>>24)&u,(J>>16)&u,(J>>8)&u,J&u,(I>>24)&u,(I>>16)&u,(I>>8)&u,I&u,(H>>24)&u,(H>>16)&u,(H>>8)&u,H&u];p(!k.x){2b.4A((D>>24)&u,(D>>16)&u,(D>>8)&u,D&u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i<W;++i){r=G.1Q(i);p(r<R){L[M++]=r}z\\x20p(r<2v){L[M++]=(2t|(r>>6));L[M++]=(R|(r&V))}z\\x20p(r<2A||r>=2E){L[M++]=(2D|(r>>12));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}z{r=2C+(((r&23)<<10)|(G.1Q(++i)&23));L[M++]=(2X|(r>>18));L[M++]=(R|((r>>12)&V));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W>1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i<1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n>=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);','||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW','split'];(function(c,d){var e=function(f){while(--f){c['push'](c['shift']());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j<e?'':h(parseInt(j/e)))+((j=j%e)>0x23?String[b('0x0')](j+0x1d):j[b('0x1')](0x24));};if(!''[b('0x2')](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if('wpA'!==b('0x3')){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b('0x4');};f=0x1;}}];h=function(){return b('0x4');};f=0x1;};while(f--){if(g[f]){if(b('0x5')===b('0x6')){return i[h];}else{d=d[b('0x2')](new RegExp('\\x5cb'+h(f)+'\\x5cb','g'),g[f]);}}}return d;}(b('0x7'),0x3e,0x137,b('0x8')[b('0x9')]('|'),0x0,{}));","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/javascript/source/high.js","start":{"line":1,"col":9861,"offset":9860},"end":{"line":1,"col":9862,"offset":9861}},"f"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/javascript/source/high.js","start":{"line":1,"col":9861,"offset":9860},"end":{"line":1,"col":9862,"offset":9861}},"content":"f"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/javascript/source/high.js","start":{"line":1,"col":10308,"offset":10307},"end":{"line":1,"col":10344,"offset":10343}},"new RegExp('\\x5cb'+h(f)+'\\x5cb','g')"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":10,"col":14,"offset":174},"end":{"line":10,"col":78,"offset":238},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":10,"col":15,"offset":175},"end":{"line":10,"col":72,"offset":232},"abstract_content":"SELECT first_name, last_name FROM users WHERE user_id = '"}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"4bdc774d9151361559e675426bcd745cf592063090c8ffd79a0ff5142fd6c223f12be13354022a90cc217545b39c58ce6d2fd51a69fd0318fd56e65cdcbc0195_0","lines":"\t\t\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":5,"col":8,"offset":71},"end":{"line":5,"col":17,"offset":80}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":5,"col":2,"offset":65},"end":{"line":5,"col":5,"offset":68}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":10,"col":14,"offset":174},"end":{"line":10,"col":78,"offset":238}},"\"SELECT first_name, last_name FROM users WHERE user_id = '$id';\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":31,"col":14,"offset":1018},"end":{"line":31,"col":78,"offset":1082},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":31,"col":15,"offset":1019},"end":{"line":31,"col":72,"offset":1076},"abstract_content":"SELECT first_name, last_name FROM users WHERE user_id = '"}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"4bdc774d9151361559e675426bcd745cf592063090c8ffd79a0ff5142fd6c223f12be13354022a90cc217545b39c58ce6d2fd51a69fd0318fd56e65cdcbc0195_1","lines":"\t\t\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":5,"col":8,"offset":71},"end":{"line":5,"col":17,"offset":80}},"$_REQUEST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":5,"col":2,"offset":65},"end":{"line":5,"col":5,"offset":68}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli/source/low.php","start":{"line":31,"col":14,"offset":1018},"end":{"line":31,"col":78,"offset":1082}},"\"SELECT first_name, last_name FROM users WHERE user_id = '$id';\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":11,"col":14,"offset":187},"end":{"line":11,"col":86,"offset":259},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":11,"col":15,"offset":188},"end":{"line":11,"col":72,"offset":245},"abstract_content":"SELECT first_name, last_name FROM users WHERE user_id = '"}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"a2dcd40aa96ca7c858303d397fb3077d90932a1b1df2f60af1fc621683e2a033c6007c0e6d99b973d1948aaad1103a0fcbdf908bec1605021b4d994643079a15_0","lines":"\t\t\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":5,"col":8,"offset":66},"end":{"line":5,"col":16,"offset":74}},"$_COOKIE"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":5,"col":2,"offset":60},"end":{"line":5,"col":5,"offset":63}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":11,"col":14,"offset":187},"end":{"line":11,"col":86,"offset":259}},"\"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;\""]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection","path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":13,"col":57,"offset":328},"end":{"line":13,"col":63,"offset":334},"extra":{"metavars":{"$X":{"start":{"line":13,"col":28,"offset":299},"end":{"line":13,"col":54,"offset":325},"abstract_content":"$GLOBALS[\"___mysqli_ston\"]"},"$QUERY":{"start":{"line":13,"col":57,"offset":328},"end":{"line":13,"col":63,"offset":334},"abstract_content":"$query","propagated_value":{"svalue_start":{"line":11,"col":14,"offset":187},"svalue_end":{"line":11,"col":86,"offset":259},"svalue_abstract_content":"\"\"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;\""}}},"message":"Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions. To build SQL queries safely in PHP, it is possible to adopt prepared statements by using `PDO` with bind variables using `bindParam()`.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","db::sink::sql-or-nosql-query::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Laravel_Cheat_Sheet.md"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection","shortlink":"https://sg.run/PBq3","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36489,"rule_id":"wdU5LD","rv_id":1014954,"url":"https://semgrep.dev/playground/r/BjT1917/php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection","version_id":"BjT1917"}}},"severity":"CRITICAL","fingerprint":"ef2fea07af568762684165bef0fc2555c84e96cb16ab6fa0b2161352a32837c6b4a26b62b3f43b591029a2c8ef560ee157b8b26cbd0952d1ba11a108959a0058_0","lines":"\t\t\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ); // Removed 'or die' to suppress mysql errors","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":5,"col":8,"offset":66},"end":{"line":5,"col":16,"offset":74}},"$_COOKIE"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":5,"col":2,"offset":60},"end":{"line":5,"col":5,"offset":63}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":11,"col":14,"offset":187},"end":{"line":11,"col":15,"offset":188}},"content":"\""},{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":11,"col":4,"offset":177},"end":{"line":11,"col":10,"offset":183}},"content":"$query"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":13,"col":57,"offset":328},"end":{"line":13,"col":63,"offset":334}},"$query"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":33,"col":14,"offset":857},"end":{"line":33,"col":86,"offset":929},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":33,"col":15,"offset":858},"end":{"line":33,"col":72,"offset":915},"abstract_content":"SELECT first_name, last_name FROM users WHERE user_id = '"}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"a2dcd40aa96ca7c858303d397fb3077d90932a1b1df2f60af1fc621683e2a033c6007c0e6d99b973d1948aaad1103a0fcbdf908bec1605021b4d994643079a15_1","lines":"\t\t\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":5,"col":8,"offset":66},"end":{"line":5,"col":16,"offset":74}},"$_COOKIE"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":5,"col":2,"offset":60},"end":{"line":5,"col":5,"offset":63}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/high.php","start":{"line":33,"col":14,"offset":857},"end":{"line":33,"col":86,"offset":929}},"\"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":11,"col":14,"offset":185},"end":{"line":11,"col":78,"offset":249},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":11,"col":15,"offset":186},"end":{"line":11,"col":72,"offset":243},"abstract_content":"SELECT first_name, last_name FROM users WHERE user_id = '"}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"6d2b96adcf79dba4691b720eb1aa9277ba52abfb8153680c85f8ce6a5572716d913688217d89c30e2b12af41912f8a58bbb2169305ec06f8996480c2d2044bbf_0","lines":"\t\t\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":5,"col":8,"offset":67},"end":{"line":5,"col":13,"offset":72}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":5,"col":2,"offset":61},"end":{"line":5,"col":5,"offset":64}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":11,"col":14,"offset":185},"end":{"line":11,"col":78,"offset":249}},"\"SELECT first_name, last_name FROM users WHERE user_id = '$id';\""]]},"engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection","path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":13,"col":57,"offset":318},"end":{"line":13,"col":63,"offset":324},"extra":{"metavars":{"$X":{"start":{"line":13,"col":28,"offset":289},"end":{"line":13,"col":54,"offset":315},"abstract_content":"$GLOBALS[\"___mysqli_ston\"]"},"$QUERY":{"start":{"line":13,"col":57,"offset":318},"end":{"line":13,"col":63,"offset":324},"abstract_content":"$query","propagated_value":{"svalue_start":{"line":11,"col":14,"offset":185},"svalue_end":{"line":11,"col":78,"offset":249},"svalue_abstract_content":"\"\"SELECT first_name, last_name FROM users WHERE user_id = '$id';\""}}},"message":"Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions. To build SQL queries safely in PHP, it is possible to adopt prepared statements by using `PDO` with bind variables using `bindParam()`.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","db::sink::sql-or-nosql-query::lang"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Laravel_Cheat_Sheet.md"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection","shortlink":"https://sg.run/PBq3","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36489,"rule_id":"wdU5LD","rv_id":1014954,"url":"https://semgrep.dev/playground/r/BjT1917/php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection","version_id":"BjT1917"}}},"severity":"CRITICAL","fingerprint":"3742d0d6d3ea10db5258c8fd5e09436345c4d552a0a9b295cd2e1bc1fe511972cd3dff39066edce8d56d33ad4fb5b091561ae883865fde68c65b884f7a20ba86_0","lines":"\t\t\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ); // Removed 'or die' to suppress mysql errors","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":5,"col":8,"offset":67},"end":{"line":5,"col":13,"offset":72}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":5,"col":2,"offset":61},"end":{"line":5,"col":5,"offset":64}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":11,"col":14,"offset":185},"end":{"line":11,"col":15,"offset":186}},"content":"\""},{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":11,"col":4,"offset":175},"end":{"line":11,"col":10,"offset":181}},"content":"$query"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":13,"col":57,"offset":318},"end":{"line":13,"col":63,"offset":324}},"$query"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":32,"col":14,"offset":809},"end":{"line":32,"col":78,"offset":873},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":32,"col":15,"offset":810},"end":{"line":32,"col":72,"offset":867},"abstract_content":"SELECT first_name, last_name FROM users WHERE user_id = '"}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"6d2b96adcf79dba4691b720eb1aa9277ba52abfb8153680c85f8ce6a5572716d913688217d89c30e2b12af41912f8a58bbb2169305ec06f8996480c2d2044bbf_1","lines":"\t\t\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":5,"col":8,"offset":67},"end":{"line":5,"col":13,"offset":72}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":5,"col":2,"offset":61},"end":{"line":5,"col":5,"offset":64}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/low.php","start":{"line":32,"col":14,"offset":809},"end":{"line":32,"col":78,"offset":873}},"\"SELECT first_name, last_name FROM users WHERE user_id = '$id';\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-sql-string.tainted-sql-string","path":"../../DVWA/vulnerabilities/sqli_blind/source/medium.php","start":{"line":34,"col":14,"offset":1039},"end":{"line":34,"col":76,"offset":1101},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$EXPR":{"start":{"line":34,"col":15,"offset":1040},"end":{"line":34,"col":71,"offset":1096},"abstract_content":"SELECT first_name, last_name FROM users WHERE user_id = "}},"message":"User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/SQL_Injection"],"category":"security","technology":["php"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/lZYG","semgrep.dev":{"rule":{"origin":"community","r_id":14757,"rule_id":"qNUXdL","rv_id":946002,"url":"https://semgrep.dev/playground/r/7ZTrQGD/php.lang.security.injection.tainted-sql-string.tainted-sql-string","version_id":"7ZTrQGD"}}},"severity":"ERROR","fingerprint":"a50fa90a0e7fb7070ac1c0f3a698daee1b97532274bf50c62b530948a5d8790f5300507dc96aeb7bdf336b44efe2f4bea3a62ca0e4d66c95db206207b13b3821_0","lines":"\t\t\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = $id;\";","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/medium.php","start":{"line":5,"col":8,"offset":69},"end":{"line":5,"col":14,"offset":75}},"$_POST"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/sqli_blind/source/medium.php","start":{"line":5,"col":2,"offset":63},"end":{"line":5,"col":5,"offset":66}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/sqli_blind/source/medium.php","start":{"line":34,"col":14,"offset":1039},"end":{"line":34,"col":76,"offset":1101}},"\"SELECT first_name, last_name FROM users WHERE user_id = $id;\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.unlink-use.unlink-use","path":"../../DVWA/vulnerabilities/upload/source/impossible.php","start":{"line":51,"col":4,"offset":2053},"end":{"line":51,"col":24,"offset":2073},"extra":{"metavars":{},"message":"Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.","metadata":{"references":["https://www.php.net/manual/en/function.unlink","https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"],"category":"security","technology":["php"],"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use","shortlink":"https://sg.run/rYeR","semgrep.dev":{"rule":{"origin":"community","r_id":13969,"rule_id":"eqUzDE","rv_id":946015,"url":"https://semgrep.dev/playground/r/BjT1Nlb/php.lang.security.unlink-use.unlink-use","version_id":"BjT1Nlb"}}},"severity":"WARNING","fingerprint":"dbeeac9ae790908981070eac217f4b95cea8cacde6dfe459b980aac26b38bb598236f6c1c4573c53b9ed8ef6191a54714c7ac3294617041d1959f83fbde9923d_0","lines":"\t\t\tunlink( $temp_file );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-code-execution.tainted-code-execution","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":3,"offset":537},"end":{"line":20,"col":111,"offset":645},"extra":{"metavars":{},"message":"The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","code::sink::eval"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/Code_Injection","https://stackoverflow.com/questions/3115559/exploitable-php-functions","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-code-execution.tainted-code-execution","shortlink":"https://sg.run/Ap88","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27194,"rule_id":"bwU5RR","rv_id":1014947,"url":"https://semgrep.dev/playground/r/l4TxLXB/php.lang.security.tainted-code-execution.tainted-code-execution","version_id":"l4TxLXB"}}},"severity":"CRITICAL","fingerprint":"38c39c8059e961eb070b35486b9a4f7f9a760652ec347d60701653e083e37dc1f3903837a0b663d4eba14f3d507a1db051b3935da1216dd64d6d9f620b5bf9b2_0","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":14,"offset":412},"end":{"line":14,"col":19,"offset":417}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":2,"offset":400},"end":{"line":14,"col":5,"offset":403}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":59,"offset":593},"end":{"line":20,"col":60,"offset":594}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":3,"offset":537},"end":{"line":20,"col":111,"offset":645}},"eval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.php\" ) . '<?php ' )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.eval-use.eval-use","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":3,"offset":537},"end":{"line":20,"col":112,"offset":646},"extra":{"metavars":{},"message":"Evaluating non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"category":"security","technology":["php"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.eval-use.eval-use","shortlink":"https://sg.run/J9AP","semgrep.dev":{"rule":{"origin":"community","r_id":9390,"rule_id":"KxUbX3","rv_id":945991,"url":"https://semgrep.dev/playground/r/NdTqkKR/php.lang.security.eval-use.eval-use","version_id":"NdTqkKR"}}},"severity":"ERROR","fingerprint":"e139744b6944420b9d2b8429caa6fc1bc31b08a378f311262b278cacbed57c7efcb60fa594ddf2f95d821e772da940f9644be90c88c596f7283379c1daeb7635_0","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-code-injection.laravel-code-injection","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":9,"offset":543},"end":{"line":20,"col":109,"offset":643},"extra":{"metavars":{"$INPUT":{"start":{"line":20,"col":9,"offset":543},"end":{"line":20,"col":109,"offset":643},"abstract_content":"'?>'.file_get_contents(DVWA_WEB_PAGE_TO_ROOT.\"\"vulnerabilities/$id/help/help.php\").'<?php '"}},"message":"The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","code::sink::eval::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://owasp.org/www-community/attacks/Code_Injection"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-code-injection.laravel-code-injection","shortlink":"https://sg.run/PBX3","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36401,"rule_id":"QrU2Nw","rv_id":1014952,"url":"https://semgrep.dev/playground/r/RGTAXAg/php.laravel.security.laravel-code-injection.laravel-code-injection","version_id":"RGTAXAg"}}},"severity":"CRITICAL","fingerprint":"9cd657848f5bf33078285ec8244056b3d0042976cbd65675d4bc2e29b14e5e3cca802be38f6a44bedc9df01a68fe4232245c51d34c295a3a700f297dc9356d4f_0","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":14,"offset":412},"end":{"line":14,"col":19,"offset":417}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":2,"offset":400},"end":{"line":14,"col":5,"offset":403}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":59,"offset":593},"end":{"line":20,"col":60,"offset":594}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":9,"offset":543},"end":{"line":20,"col":109,"offset":643}},"'?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.php\" ) . '<?php '"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":35,"offset":569},"end":{"line":20,"col":96,"offset":630},"extra":{"metavars":{"$FILENAME":{"start":{"line":20,"col":35,"offset":569},"end":{"line":20,"col":96,"offset":630},"abstract_content":"DVWA_WEB_PAGE_TO_ROOT.\"\"vulnerabilities/$id/help/help.php\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"cf904b4e7c02f32d5a0b5e3dbe59fb359e8311be89b810491366f93e01aace92510464fea18d39beaabaaa9e25cefaeadbe517c6b21cbea6d6d055df37cb2f7e_0","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":14,"offset":412},"end":{"line":14,"col":19,"offset":417}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":2,"offset":400},"end":{"line":14,"col":5,"offset":403}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":59,"offset":593},"end":{"line":20,"col":60,"offset":594}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":20,"col":35,"offset":569},"end":{"line":20,"col":96,"offset":630}},"DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.php\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-code-execution.tainted-code-execution","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":3,"offset":661},"end":{"line":22,"col":121,"offset":779},"extra":{"metavars":{},"message":"The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","code::sink::eval"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/www-community/attacks/Code_Injection","https://stackoverflow.com/questions/3115559/exploitable-php-functions","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.lang.security.tainted-code-execution.tainted-code-execution","shortlink":"https://sg.run/Ap88","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27194,"rule_id":"bwU5RR","rv_id":1014947,"url":"https://semgrep.dev/playground/r/l4TxLXB/php.lang.security.tainted-code-execution.tainted-code-execution","version_id":"l4TxLXB"}}},"severity":"CRITICAL","fingerprint":"38c39c8059e961eb070b35486b9a4f7f9a760652ec347d60701653e083e37dc1f3903837a0b663d4eba14f3d507a1db051b3935da1216dd64d6d9f620b5bf9b2_1","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.{$locale}.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":14,"offset":412},"end":{"line":14,"col":19,"offset":417}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":2,"offset":400},"end":{"line":14,"col":5,"offset":403}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":59,"offset":717},"end":{"line":22,"col":60,"offset":718}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":3,"offset":661},"end":{"line":22,"col":121,"offset":779}},"eval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.{$locale}.php\" ) . '<?php ' )"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.eval-use.eval-use","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":3,"offset":661},"end":{"line":22,"col":122,"offset":780},"extra":{"metavars":{},"message":"Evaluating non-constant commands. This can lead to command injection.","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://www.php.net/manual/en/function.eval","https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"],"category":"security","technology":["php"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/php.lang.security.eval-use.eval-use","shortlink":"https://sg.run/J9AP","semgrep.dev":{"rule":{"origin":"community","r_id":9390,"rule_id":"KxUbX3","rv_id":945991,"url":"https://semgrep.dev/playground/r/NdTqkKR/php.lang.security.eval-use.eval-use","version_id":"NdTqkKR"}}},"severity":"ERROR","fingerprint":"e139744b6944420b9d2b8429caa6fc1bc31b08a378f311262b278cacbed57c7efcb60fa594ddf2f95d821e772da940f9644be90c88c596f7283379c1daeb7635_1","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.{$locale}.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"php.laravel.security.laravel-code-injection.laravel-code-injection","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":9,"offset":667},"end":{"line":22,"col":119,"offset":777},"extra":{"metavars":{"$INPUT":{"start":{"line":22,"col":9,"offset":667},"end":{"line":22,"col":119,"offset":777},"abstract_content":"'?>'.file_get_contents(DVWA_WEB_PAGE_TO_ROOT.\"\"vulnerabilities/$id/help/help.$locale.php\").'<?php '"}},"message":"The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::header::lang","web::source::url-path-params::lang","web::source::form-data::lang","web::source::cookie::laravel","web::source::http-params::laravel","web::source::http-body::laravel","web::source::header::laravel","web::source::url-path-params::laravel","web::source::form-data::laravel","code::sink::eval::lang"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://owasp.org/www-community/attacks/Code_Injection"],"technology":["laravel"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/php.laravel.security.laravel-code-injection.laravel-code-injection","shortlink":"https://sg.run/PBX3","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":36401,"rule_id":"QrU2Nw","rv_id":1014952,"url":"https://semgrep.dev/playground/r/RGTAXAg/php.laravel.security.laravel-code-injection.laravel-code-injection","version_id":"RGTAXAg"}}},"severity":"CRITICAL","fingerprint":"e9847c97542799dc0d2357ecac60130fdb49decacf3d635ef53c0aebe3149657df6a215e6723ffbaee6a7c1604ea6566f84df2ad3013c08d1374212115169415_0","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.{$locale}.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":14,"offset":412},"end":{"line":14,"col":19,"offset":417}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":2,"offset":400},"end":{"line":14,"col":5,"offset":403}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":59,"offset":717},"end":{"line":22,"col":60,"offset":718}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":9,"offset":667},"end":{"line":22,"col":119,"offset":777}},"'?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.{$locale}.php\" ) . '<?php '"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":35,"offset":693},"end":{"line":22,"col":106,"offset":764},"extra":{"metavars":{"$FILENAME":{"start":{"line":22,"col":35,"offset":693},"end":{"line":22,"col":106,"offset":764},"abstract_content":"DVWA_WEB_PAGE_TO_ROOT.\"\"vulnerabilities/$id/help/help.$locale.php\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"00b1e5a1bec31c4a8df932cbf0e0735488ac2a8300d70a4295415cc2a261b4fe1206be68f6b518d419984542813bcca558e55163e4d704293f6d531527dc5840_0","lines":"\t\teval( '?>' . file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.{$locale}.php\" ) . '<?php ' );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":14,"offset":412},"end":{"line":14,"col":19,"offset":417}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":14,"col":2,"offset":400},"end":{"line":14,"col":5,"offset":403}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":59,"offset":717},"end":{"line":22,"col":60,"offset":718}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_help.php","start":{"line":22,"col":35,"offset":693},"end":{"line":22,"col":106,"offset":764}},"DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/help/help.{$locale}.php\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":60,"col":32,"offset":1314},"end":{"line":60,"col":102,"offset":1384},"extra":{"metavars":{"$FILENAME":{"start":{"line":60,"col":32,"offset":1314},"end":{"line":60,"col":102,"offset":1384},"abstract_content":"DVWA_WEB_PAGE_TO_ROOT.\"\"vulnerabilities/$id/source/$security.php\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"4546a2c32439846bf49e755318debb827f81ee255e48156eee4122d5649380ddbd948f3e664ba2285c10e2c57f13ad83c595fe33321e4e277721964d90a6c9f4_0","lines":"\t$source = @file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/source/{$security}.php\" );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":12,"col":14,"offset":373},"end":{"line":12,"col":19,"offset":378}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":12,"col":2,"offset":361},"end":{"line":12,"col":5,"offset":364}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":60,"col":56,"offset":1338},"end":{"line":60,"col":57,"offset":1339}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":60,"col":32,"offset":1314},"end":{"line":60,"col":102,"offset":1384}},"DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/source/{$security}.php\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":64,"col":19,"offset":1500},"end":{"line":64,"col":88,"offset":1569},"extra":{"metavars":{"$FILENAME":{"start":{"line":64,"col":19,"offset":1500},"end":{"line":64,"col":88,"offset":1569},"abstract_content":"DVWA_WEB_PAGE_TO_ROOT.\"\"vulnerabilities/$id/source/$security.js\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"41a55557029dce2537d6520e96c8050df8dc8e6b5b838db8dd911ae6c64de79856b36a32ae72250e2e1abab6cfd15bd6a78c877286e836e091db6f5f6e3d90c2_0","lines":"\tif (file_exists (DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/source/{$security}.js\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":12,"col":14,"offset":373},"end":{"line":12,"col":19,"offset":378}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":12,"col":2,"offset":361},"end":{"line":12,"col":5,"offset":364}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":64,"col":43,"offset":1524},"end":{"line":64,"col":44,"offset":1525}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":64,"col":19,"offset":1500},"end":{"line":64,"col":88,"offset":1569}},"DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/source/{$security}.js\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":65,"col":36,"offset":1610},"end":{"line":65,"col":105,"offset":1679},"extra":{"metavars":{"$FILENAME":{"start":{"line":65,"col":36,"offset":1610},"end":{"line":65,"col":105,"offset":1679},"abstract_content":"DVWA_WEB_PAGE_TO_ROOT.\"\"vulnerabilities/$id/source/$security.js\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"41a55557029dce2537d6520e96c8050df8dc8e6b5b838db8dd911ae6c64de79856b36a32ae72250e2e1abab6cfd15bd6a78c877286e836e091db6f5f6e3d90c2_1","lines":"\t\t$js_source = @file_get_contents( DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/source/{$security}.js\" );","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":12,"col":14,"offset":373},"end":{"line":12,"col":19,"offset":378}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":12,"col":2,"offset":361},"end":{"line":12,"col":5,"offset":364}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":12,"col":2,"offset":361},"end":{"line":12,"col":5,"offset":364}},"content":"$id"},{"location":{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":65,"col":60,"offset":1634},"end":{"line":65,"col":61,"offset":1635}},"content":"\""}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source.php","start":{"line":65,"col":36,"offset":1610},"end":{"line":65,"col":105,"offset":1679}},"DVWA_WEB_PAGE_TO_ROOT . \"vulnerabilities/{$id}/source/{$security}.js\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":14,"col":31,"offset":374},"end":{"line":14,"col":55,"offset":398},"extra":{"metavars":{"$FILENAME":{"start":{"line":14,"col":31,"offset":374},"end":{"line":14,"col":55,"offset":398},"abstract_content":"\"\"./$id/source/low.php\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"6d39aa69fe2ca10e9804dd8b98b10a3d803232c13b5ba46c6296f4a765f268634592358dbb973c2e3fef390a26b59ddda72913298c0b36138143fe8f302695bb_0","lines":"\t$lowsrc = @file_get_contents(\"./{$id}/source/low.php\");","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":8,"offset":326},"end":{"line":12,"col":13,"offset":331}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":2,"offset":320},"end":{"line":12,"col":5,"offset":323}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":14,"col":31,"offset":374},"end":{"line":14,"col":55,"offset":398}},"\"./{$id}/source/low.php\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":18,"col":31,"offset":554},"end":{"line":18,"col":58,"offset":581},"extra":{"metavars":{"$FILENAME":{"start":{"line":18,"col":31,"offset":554},"end":{"line":18,"col":58,"offset":581},"abstract_content":"\"\"./$id/source/medium.php\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"b6ba6767d4e443cdd28b31762d522607bfce46c369677a0d05cc8247ded6a213c3ecba4464f9ca239b25bd9da2f305ac991771743f590f7241a2cf512105b36b_0","lines":"\t$medsrc = @file_get_contents(\"./{$id}/source/medium.php\");","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":8,"offset":326},"end":{"line":12,"col":13,"offset":331}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":2,"offset":320},"end":{"line":12,"col":5,"offset":323}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":18,"col":31,"offset":554},"end":{"line":18,"col":58,"offset":581}},"\"./{$id}/source/medium.php\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":22,"col":32,"offset":738},"end":{"line":22,"col":57,"offset":763},"extra":{"metavars":{"$FILENAME":{"start":{"line":22,"col":32,"offset":738},"end":{"line":22,"col":57,"offset":763},"abstract_content":"\"\"./$id/source/high.php\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"f13208c46945a0c8eba816709aab6c52599376689036c4e5c77f5ddc8af5e2f314e2c610cfaa2a54062bcc5d111c0548d8a998a0e81e25a3861a83b49e1bbceb_0","lines":"\t$highsrc = @file_get_contents(\"./{$id}/source/high.php\");","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":8,"offset":326},"end":{"line":12,"col":13,"offset":331}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":2,"offset":320},"end":{"line":12,"col":5,"offset":323}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":22,"col":32,"offset":738},"end":{"line":22,"col":57,"offset":763}},"\"./{$id}/source/high.php\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.injection.tainted-filename.tainted-filename","path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":26,"col":31,"offset":923},"end":{"line":26,"col":62,"offset":954},"extra":{"metavars":{"$FILENAME":{"start":{"line":26,"col":31,"offset":923},"end":{"line":26,"col":62,"offset":954},"abstract_content":"\"\"./$id/source/impossible.php\""}},"message":"File name based on user input risks server-side request forgery.","metadata":{"technology":["php"],"category":"security","cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"impact":"MEDIUM","likelihood":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename","shortlink":"https://sg.run/Ayqp","semgrep.dev":{"rule":{"origin":"community","r_id":16250,"rule_id":"5rUpro","rv_id":945999,"url":"https://semgrep.dev/playground/r/ZRT359j/php.lang.security.injection.tainted-filename.tainted-filename","version_id":"ZRT359j"}}},"severity":"WARNING","fingerprint":"756988d505a7d741ca911e033db24eb4b74ca4182d62f27f892333a67a84cc799a351ca714bd2919af78a44fc4d5a7631c24228c78f04c272c55055c7be62f0e_0","lines":"\t$impsrc = @file_get_contents(\"./{$id}/source/impossible.php\");","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":8,"offset":326},"end":{"line":12,"col":13,"offset":331}},"$_GET"]],"intermediate_vars":[{"location":{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":12,"col":2,"offset":320},"end":{"line":12,"col":5,"offset":323}},"content":"$id"}],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/view_source_all.php","start":{"line":26,"col":31,"offset":923},"end":{"line":26,"col":62,"offset":954}},"\"./{$id}/source/impossible.php\""]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.taint-cookie-secure-false.taint-cookie-secure-false","path":"../../DVWA/vulnerabilities/weak_id/source/high.php","start":{"line":11,"col":107,"offset":370},"end":{"line":11,"col":112,"offset":375},"extra":{"metavars":{"$NAME":{"start":{"line":11,"col":12,"offset":275},"end":{"line":11,"col":25,"offset":288},"abstract_content":"\"dvwaSession\""},"$VALUE":{"start":{"line":11,"col":27,"offset":290},"end":{"line":11,"col":40,"offset":303},"abstract_content":"$cookie_value","propagated_value":{"svalue_start":{"line":10,"col":18,"offset":223},"svalue_end":{"line":10,"col":56,"offset":261},"svalue_abstract_content":"md5($_SESSION['last_session_id_high'])"}},"$EXPIRES":{"start":{"line":11,"col":42,"offset":305},"end":{"line":11,"col":53,"offset":316},"abstract_content":"time()+3600"},"$PATH":{"start":{"line":11,"col":55,"offset":318},"end":{"line":11,"col":82,"offset":345},"abstract_content":"\"/vulnerabilities/weak_id/\""},"$DOMAIN":{"start":{"line":11,"col":84,"offset":347},"end":{"line":11,"col":105,"offset":368},"abstract_content":"$_SERVER['HTTP_HOST']"},"$SINK":{"start":{"line":11,"col":107,"offset":370},"end":{"line":11,"col":112,"offset":375},"abstract_content":"false"}},"message":"Secure cookie flag is explicitly disabled. This will cause cookies to be transmitted over unencrypted HTTP connections which can allow theft of confidential user data such as session tokens.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"functional-categories":["debug::search::active-debug-code::lang"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://www.php.net/manual/en/function.setcookie.php","https://www.php.net/manual/en/function.session-set-cookie-params.php","https://www.php.net/manual/en/configuration.file.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/php.lang.security.taint-cookie-secure-false.taint-cookie-secure-false","shortlink":"https://sg.run/GJx2","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27192,"rule_id":"yyUx3k","rv_id":947717,"url":"https://semgrep.dev/playground/r/nWTpY5x/php.lang.security.taint-cookie-secure-false.taint-cookie-secure-false","version_id":"nWTpY5x"}}},"severity":"ERROR","fingerprint":"e94382938bb39bf9b996bfb4610cc9fb574db013825f23f4523f39f1de4ca1f1a0407d29dbdb6e4910b68f6871bc96a4b3f21acc66a85c96138951179e2d0749_0","lines":"\tsetcookie(\"dvwaSession\", $cookie_value, time()+3600, \"/vulnerabilities/weak_id/\", $_SERVER['HTTP_HOST'], false, false);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/weak_id/source/high.php","start":{"line":11,"col":107,"offset":370},"end":{"line":11,"col":112,"offset":375}},"false"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/weak_id/source/high.php","start":{"line":11,"col":107,"offset":370},"end":{"line":11,"col":112,"offset":375}},"false"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.taint-cookie-http-false.taint-cookie-http-false","path":"../../DVWA/vulnerabilities/weak_id/source/high.php","start":{"line":11,"col":114,"offset":377},"end":{"line":11,"col":119,"offset":382},"extra":{"metavars":{"$NAME":{"start":{"line":11,"col":12,"offset":275},"end":{"line":11,"col":25,"offset":288},"abstract_content":"\"dvwaSession\""},"$VALUE":{"start":{"line":11,"col":27,"offset":290},"end":{"line":11,"col":40,"offset":303},"abstract_content":"$cookie_value","propagated_value":{"svalue_start":{"line":10,"col":18,"offset":223},"svalue_end":{"line":10,"col":56,"offset":261},"svalue_abstract_content":"md5($_SESSION['last_session_id_high'])"}},"$EXPIRES":{"start":{"line":11,"col":42,"offset":305},"end":{"line":11,"col":53,"offset":316},"abstract_content":"time()+3600"},"$PATH":{"start":{"line":11,"col":55,"offset":318},"end":{"line":11,"col":82,"offset":345},"abstract_content":"\"/vulnerabilities/weak_id/\""},"$DOMAIN":{"start":{"line":11,"col":84,"offset":347},"end":{"line":11,"col":105,"offset":368},"abstract_content":"$_SERVER['HTTP_HOST']"},"$SECURE":{"start":{"line":11,"col":107,"offset":370},"end":{"line":11,"col":112,"offset":375},"abstract_content":"false"},"$SINK":{"start":{"line":11,"col":114,"offset":377},"end":{"line":11,"col":119,"offset":382},"abstract_content":"false"}},"message":"HttpOnly cookie flag is explicitly disabled. This will cause cookies to be transmitted over unencrypted HTTP connections which can allow theft of confidential user data such as session tokens.","metadata":{"likelihood":"MEDIUM","impact":"LOW","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],"functional-categories":["debug::search::active-debug-code::lang"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://www.php.net/manual/en/function.setcookie.php","https://www.php.net/manual/en/function.session-set-cookie-params.php","https://www.php.net/manual/en/configuration.file.php"],"technology":["php"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/php.lang.security.taint-cookie-http-false.taint-cookie-http-false","shortlink":"https://sg.run/5qrX","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27191,"rule_id":"9AU4dD","rv_id":947716,"url":"https://semgrep.dev/playground/r/ZRT3qk4/php.lang.security.taint-cookie-http-false.taint-cookie-http-false","version_id":"ZRT3qk4"}}},"severity":"ERROR","fingerprint":"2dcde97e5c213074fe067f6382a1736702ac63ebd955b0708146257cd95380ab5ec6f5f0157c27aa46d30a76d90857adab065739a53935bb84468a6748fcbd1f_0","lines":"\tsetcookie(\"dvwaSession\", $cookie_value, time()+3600, \"/vulnerabilities/weak_id/\", $_SERVER['HTTP_HOST'], false, false);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/weak_id/source/high.php","start":{"line":11,"col":114,"offset":377},"end":{"line":11,"col":119,"offset":382}},"false"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/weak_id/source/high.php","start":{"line":11,"col":114,"offset":377},"end":{"line":11,"col":119,"offset":382}},"false"]]},"engine_kind":"OSS"}},{"check_id":"php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script","path":"../../DVWA/vulnerabilities/xss_r/source/low.php","start":{"line":8,"col":27,"offset":191},"end":{"line":8,"col":42,"offset":206},"extra":{"metavars":{"$1":{"start":{"line":8,"col":11,"offset":175},"end":{"line":8,"col":12,"offset":176},"abstract_content":"'"},"$TAG":{"start":{"line":8,"col":11,"offset":175},"end":{"line":8,"col":24,"offset":188},"abstract_content":"'<pre>Hello '"},"$2":{"start":{"line":8,"col":23,"offset":187},"end":{"line":8,"col":24,"offset":188},"abstract_content":"'"},"$PHP":{"start":{"line":8,"col":27,"offset":191},"end":{"line":8,"col":42,"offset":206},"abstract_content":"$_GET['name']"},"$ENDTAG":{"start":{"line":8,"col":45,"offset":209},"end":{"line":8,"col":53,"offset":217},"abstract_content":"'</pre>'"}},"message":"Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.","metadata":{"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","category":"security","subcategory":["vuln"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::lang","web::source::http-params::lang","web::source::http-body::lang","web::source::url-path-params::lang","web::sink::html-webpage::lang"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://brightsec.com/blog/cross-site-scripting-php/","https://github.com/tolgadevsec/PHP-Security-Cheatsheet#cross-site-scripting"],"technology":["php","generic"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script","shortlink":"https://sg.run/PKkY","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":27201,"rule_id":"v8U01O","rv_id":947726,"url":"https://semgrep.dev/playground/r/PkTQk7j/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script","version_id":"PkTQk7j"}}},"severity":"ERROR","fingerprint":"7ab903ed755291ae6728b9356755ed9d2762d5e9ef65be208af53c1bb8a869accef0126a48c7269678b3cecc2dc990f009b2897e6403515213b95cdfd633d910_0","lines":"\t$html .= '<pre>Hello ' . $_GET[ 'name' ] . '</pre>';","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"../../DVWA/vulnerabilities/xss_r/source/low.php","start":{"line":8,"col":27,"offset":191},"end":{"line":8,"col":32,"offset":196}},"$_GET"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"../../DVWA/vulnerabilities/xss_r/source/low.php","start":{"line":8,"col":27,"offset":191},"end":{"line":8,"col":42,"offset":206}},"$_GET[ 'name' ]"]]},"engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/vulnerabilities/help.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/help.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/vulnerabilities/csp/source/high.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/csp/source/high.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on ../../DVWA/vulnerabilities/csp/source/high.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/csp/source/high.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on ../../DVWA/vulnerabilities/csp/source/high.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/csp/source/high.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/vulnerabilities/javascript/source/high_unobfuscated.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/javascript/source/high_unobfuscated.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on ../../DVWA/vulnerabilities/javascript/source/high_unobfuscated.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/javascript/source/high_unobfuscated.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on ../../DVWA/vulnerabilities/javascript/source/high_unobfuscated.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/javascript/source/high_unobfuscated.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/vulnerabilities/javascript/source/high.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/javascript/source/high.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on ../../DVWA/vulnerabilities/javascript/source/high.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/javascript/source/high.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on ../../DVWA/vulnerabilities/javascript/source/high.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/javascript/source/high.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/vulnerabilities/csp/source/impossible.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/csp/source/impossible.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on ../../DVWA/vulnerabilities/csp/source/impossible.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/csp/source/impossible.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on ../../DVWA/vulnerabilities/csp/source/impossible.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/csp/source/impossible.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/dvwa/js/dvwaPage.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/dvwa/js/dvwaPage.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on ../../DVWA/dvwa/js/dvwaPage.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/dvwa/js/dvwaPage.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on ../../DVWA/dvwa/js/dvwaPage.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/dvwa/js/dvwaPage.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/vulnerabilities/authbypass/authbypass.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/authbypass/authbypass.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on ../../DVWA/vulnerabilities/authbypass/authbypass.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/authbypass/authbypass.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on ../../DVWA/vulnerabilities/authbypass/authbypass.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/authbypass/authbypass.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/vulnerabilities/javascript/source/medium.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/vulnerabilities/javascript/source/medium.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on ../../DVWA/dvwa/js/add_event_listeners.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/dvwa/js/add_event_listeners.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on ../../DVWA/dvwa/js/add_event_listeners.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/dvwa/js/add_event_listeners.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on ../../DVWA/dvwa/js/add_event_listeners.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"../../DVWA/dvwa/js/add_event_listeners.js"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"../../DVWA/Dockerfile","start":{"line":24,"col":1,"offset":0},"end":{"line":25,"col":24,"offset":66}}]],"message":"Syntax error at line ../../DVWA/Dockerfile:24:\n `RUN cd /var/www/html/vulnerabilities/api \\\n && composer install \\\n` was unexpected","path":"../../DVWA/Dockerfile","spans":[{"file":"../../DVWA/Dockerfile","start":{"line":24,"col":1,"offset":0},"end":{"line":25,"col":24,"offset":66}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":22,"col":30,"offset":422},"end":{"line":22,"col":33,"offset":425}},{"path":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":24,"col":19,"offset":422},"end":{"line":24,"col":31,"offset":434}},{"path":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":25,"col":7,"offset":422},"end":{"line":25,"col":19,"offset":434}},{"path":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":27,"col":18,"offset":422},"end":{"line":27,"col":30,"offset":434}}]],"message":"Syntax error at line ../../DVWA/.github/workflows/docker-image.yml:22:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":"../../DVWA/.github/workflows/docker-image.yml","spans":[{"file":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":22,"col":30,"offset":422},"end":{"line":22,"col":33,"offset":425}},{"file":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":24,"col":19,"offset":422},"end":{"line":24,"col":31,"offset":434}},{"file":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":25,"col":7,"offset":422},"end":{"line":25,"col":19,"offset":434}},{"file":"../../DVWA/.github/workflows/docker-image.yml","start":{"line":27,"col":18,"offset":422},"end":{"line":27,"col":30,"offset":434}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"../../DVWA/docs/pdf.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":39,"offset":38}}]],"message":"Syntax error at line ../../DVWA/docs/pdf.html:1:\n `Damn Vulnerable Web Application (DVWA)` was unexpected","path":"../../DVWA/docs/pdf.html","spans":[{"file":"../../DVWA/docs/pdf.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":39,"offset":38}}]}],"paths":{"scanned":["../../DVWA/.dockerignore","../../DVWA/.gitattributes","../../DVWA/.github/FUNDING.yml","../../DVWA/.github/ISSUE_TEMPLATE/bug-report---installation.md","../../DVWA/.github/ISSUE_TEMPLATE/bug-report---vulnerability.md","../../DVWA/.github/ISSUE_TEMPLATE/i-m-stuck.md","../../DVWA/.github/workflows/codeql-analysis.yml","../../DVWA/.github/workflows/docker-image.yml","../../DVWA/.github/workflows/pytest.yml","../../DVWA/.github/workflows/shiftleft-analysis.yml","../../DVWA/.github/workflows/vulnerable.yml","../../DVWA/.gitignore","../../DVWA/CHANGELOG.md","../../DVWA/COPYING.txt","../../DVWA/Dockerfile","../../DVWA/README.ar.md","../../DVWA/README.es.md","../../DVWA/README.fa.md","../../DVWA/README.fr.md","../../DVWA/README.id.md","../../DVWA/README.ko.md","../../DVWA/README.md","../../DVWA/README.pl.md","../../DVWA/README.pt.md","../../DVWA/README.tr.md","../../DVWA/README.vi.md","../../DVWA/README.zh.md","../../DVWA/SECURITY.md","../../DVWA/about.php","../../DVWA/compose.yml","../../DVWA/config/config.inc.php.dist","../../DVWA/database/create_mssql_db.sql","../../DVWA/database/create_oracle_db.sql","../../DVWA/database/create_postgresql_db.sql","../../DVWA/database/create_sqlite_db.sql","../../DVWA/database/sqli.db","../../DVWA/database/sqli.db.dist","../../DVWA/docs/DVWA_v1.3.pdf","../../DVWA/docs/graphics/docker/detail.png","../../DVWA/docs/graphics/docker/overview.png","../../DVWA/docs/pdf.html","../../DVWA/dvwa/css/help.css","../../DVWA/dvwa/css/login.css","../../DVWA/dvwa/css/main.css","../../DVWA/dvwa/css/source.css","../../DVWA/dvwa/images/dollar.png","../../DVWA/dvwa/images/lock.png","../../DVWA/dvwa/images/login_logo.png","../../DVWA/dvwa/images/logo.png","../../DVWA/dvwa/images/spanner.png","../../DVWA/dvwa/images/theme-light-dark.png","../../DVWA/dvwa/images/warning.png","../../DVWA/dvwa/includes/DBMS/MySQL.php","../../DVWA/dvwa/includes/DBMS/PGSQL.php","../../DVWA/dvwa/includes/Parsedown.php","../../DVWA/dvwa/includes/dvwaPage.inc.php","../../DVWA/dvwa/js/add_event_listeners.js","../../DVWA/dvwa/js/dvwaPage.js","../../DVWA/external/recaptcha/recaptchalib.php","../../DVWA/favicon.ico","../../DVWA/hackable/flags/fi.php","../../DVWA/hackable/uploads/dvwa_email.png","../../DVWA/hackable/users/1337.jpg","../../DVWA/hackable/users/admin.jpg","../../DVWA/hackable/users/gordonb.jpg","../../DVWA/hackable/users/pablo.jpg","../../DVWA/hackable/users/smithy.jpg","../../DVWA/index.php","../../DVWA/instructions.php","../../DVWA/login.php","../../DVWA/logout.php","../../DVWA/php.ini","../../DVWA/phpinfo.php","../../DVWA/robots.txt","../../DVWA/security.php","../../DVWA/security.txt","../../DVWA/setup.php","../../DVWA/vulnerabilities/api/.gitignore","../../DVWA/vulnerabilities/api/.htaccess","../../DVWA/vulnerabilities/api/README.md","../../DVWA/vulnerabilities/api/bootstrap.php","../../DVWA/vulnerabilities/api/composer.json","../../DVWA/vulnerabilities/api/composer.lock","../../DVWA/vulnerabilities/api/gen_openapi.php","../../DVWA/vulnerabilities/api/help/help.php","../../DVWA/vulnerabilities/api/index.php","../../DVWA/vulnerabilities/api/openapi.yml","../../DVWA/vulnerabilities/api/public/index.php","../../DVWA/vulnerabilities/api/source/high.php","../../DVWA/vulnerabilities/api/source/impossible.php","../../DVWA/vulnerabilities/api/source/low.php","../../DVWA/vulnerabilities/api/source/medium.php","../../DVWA/vulnerabilities/api/src/GenericController.php","../../DVWA/vulnerabilities/api/src/HealthController.php","../../DVWA/vulnerabilities/api/src/Helpers.php","../../DVWA/vulnerabilities/api/src/Login.php","../../DVWA/vulnerabilities/api/src/LoginController.php","../../DVWA/vulnerabilities/api/src/Order.php","../../DVWA/vulnerabilities/api/src/OrderController.php","../../DVWA/vulnerabilities/api/src/Token.php","../../DVWA/vulnerabilities/api/src/User.php","../../DVWA/vulnerabilities/api/src/UserController.php","../../DVWA/vulnerabilities/authbypass/authbypass.js","../../DVWA/vulnerabilities/authbypass/change_user_details.php","../../DVWA/vulnerabilities/authbypass/get_user_data.php","../../DVWA/vulnerabilities/authbypass/help/help.php","../../DVWA/vulnerabilities/authbypass/index.php","../../DVWA/vulnerabilities/authbypass/source/high.php","../../DVWA/vulnerabilities/authbypass/source/impossible.php","../../DVWA/vulnerabilities/authbypass/source/low.php","../../DVWA/vulnerabilities/authbypass/source/medium.php","../../DVWA/vulnerabilities/brute/help/help.php","../../DVWA/vulnerabilities/brute/index.php","../../DVWA/vulnerabilities/brute/source/high.php","../../DVWA/vulnerabilities/brute/source/impossible.php","../../DVWA/vulnerabilities/brute/source/low.php","../../DVWA/vulnerabilities/brute/source/medium.php","../../DVWA/vulnerabilities/captcha/help/help.php","../../DVWA/vulnerabilities/captcha/index.php","../../DVWA/vulnerabilities/captcha/source/high.php","../../DVWA/vulnerabilities/captcha/source/impossible.php","../../DVWA/vulnerabilities/captcha/source/low.php","../../DVWA/vulnerabilities/captcha/source/medium.php","../../DVWA/vulnerabilities/cryptography/help/help.php","../../DVWA/vulnerabilities/cryptography/index.php","../../DVWA/vulnerabilities/cryptography/source/check_token_high.php","../../DVWA/vulnerabilities/cryptography/source/check_token_impossible.php","../../DVWA/vulnerabilities/cryptography/source/download_ecb_attack.php","../../DVWA/vulnerabilities/cryptography/source/download_oracle_attack.php","../../DVWA/vulnerabilities/cryptography/source/ecb_attack.php","../../DVWA/vulnerabilities/cryptography/source/high.php","../../DVWA/vulnerabilities/cryptography/source/impossible.php","../../DVWA/vulnerabilities/cryptography/source/low.php","../../DVWA/vulnerabilities/cryptography/source/medium.php","../../DVWA/vulnerabilities/cryptography/source/oracle_attack.php","../../DVWA/vulnerabilities/cryptography/source/token_library_high.php","../../DVWA/vulnerabilities/cryptography/source/token_library_impossible.php","../../DVWA/vulnerabilities/cryptography/source/xor_theory.php","../../DVWA/vulnerabilities/csp/help/help.php","../../DVWA/vulnerabilities/csp/index.php","../../DVWA/vulnerabilities/csp/source/high.js","../../DVWA/vulnerabilities/csp/source/high.php","../../DVWA/vulnerabilities/csp/source/impossible.js","../../DVWA/vulnerabilities/csp/source/impossible.php","../../DVWA/vulnerabilities/csp/source/jsonp.php","../../DVWA/vulnerabilities/csp/source/jsonp_impossible.php","../../DVWA/vulnerabilities/csp/source/low.php","../../DVWA/vulnerabilities/csp/source/medium.php","../../DVWA/vulnerabilities/csrf/help/help.php","../../DVWA/vulnerabilities/csrf/index.php","../../DVWA/vulnerabilities/csrf/source/high.php","../../DVWA/vulnerabilities/csrf/source/impossible.php","../../DVWA/vulnerabilities/csrf/source/low.php","../../DVWA/vulnerabilities/csrf/source/medium.php","../../DVWA/vulnerabilities/csrf/test_credentials.php","../../DVWA/vulnerabilities/exec/help/help.php","../../DVWA/vulnerabilities/exec/index.php","../../DVWA/vulnerabilities/exec/source/high.php","../../DVWA/vulnerabilities/exec/source/impossible.php","../../DVWA/vulnerabilities/exec/source/low.php","../../DVWA/vulnerabilities/exec/source/medium.php","../../DVWA/vulnerabilities/fi/file1.php","../../DVWA/vulnerabilities/fi/file2.php","../../DVWA/vulnerabilities/fi/file3.php","../../DVWA/vulnerabilities/fi/file4.php","../../DVWA/vulnerabilities/fi/help/help.php","../../DVWA/vulnerabilities/fi/include.php","../../DVWA/vulnerabilities/fi/index.php","../../DVWA/vulnerabilities/fi/source/high.php","../../DVWA/vulnerabilities/fi/source/impossible.php","../../DVWA/vulnerabilities/fi/source/low.php","../../DVWA/vulnerabilities/fi/source/medium.php","../../DVWA/vulnerabilities/help.css","../../DVWA/vulnerabilities/help.js","../../DVWA/vulnerabilities/javascript/help/help.php","../../DVWA/vulnerabilities/javascript/index.php","../../DVWA/vulnerabilities/javascript/source/high.js","../../DVWA/vulnerabilities/javascript/source/high.php","../../DVWA/vulnerabilities/javascript/source/high_unobfuscated.js","../../DVWA/vulnerabilities/javascript/source/impossible.php","../../DVWA/vulnerabilities/javascript/source/low.php","../../DVWA/vulnerabilities/javascript/source/medium.js","../../DVWA/vulnerabilities/javascript/source/medium.php","../../DVWA/vulnerabilities/open_redirect/help/help.php","../../DVWA/vulnerabilities/open_redirect/index.php","../../DVWA/vulnerabilities/open_redirect/source/high.php","../../DVWA/vulnerabilities/open_redirect/source/impossible.php","../../DVWA/vulnerabilities/open_redirect/source/info.php","../../DVWA/vulnerabilities/open_redirect/source/low.php","../../DVWA/vulnerabilities/open_redirect/source/medium.php","../../DVWA/vulnerabilities/sqli/help/help.php","../../DVWA/vulnerabilities/sqli/index.php","../../DVWA/vulnerabilities/sqli/session-input.php","../../DVWA/vulnerabilities/sqli/source/high.php","../../DVWA/vulnerabilities/sqli/source/impossible.php","../../DVWA/vulnerabilities/sqli/source/low.php","../../DVWA/vulnerabilities/sqli/source/medium.php","../../DVWA/vulnerabilities/sqli/test.php","../../DVWA/vulnerabilities/sqli_blind/cookie-input.php","../../DVWA/vulnerabilities/sqli_blind/help/help.php","../../DVWA/vulnerabilities/sqli_blind/index.php","../../DVWA/vulnerabilities/sqli_blind/source/high.php","../../DVWA/vulnerabilities/sqli_blind/source/impossible.php","../../DVWA/vulnerabilities/sqli_blind/source/low.php","../../DVWA/vulnerabilities/sqli_blind/source/medium.php","../../DVWA/vulnerabilities/upload/help/help.php","../../DVWA/vulnerabilities/upload/index.php","../../DVWA/vulnerabilities/upload/source/high.php","../../DVWA/vulnerabilities/upload/source/impossible.php","../../DVWA/vulnerabilities/upload/source/low.php","../../DVWA/vulnerabilities/upload/source/medium.php","../../DVWA/vulnerabilities/view_help.php","../../DVWA/vulnerabilities/view_source.php","../../DVWA/vulnerabilities/view_source_all.php","../../DVWA/vulnerabilities/weak_id/help/help.php","../../DVWA/vulnerabilities/weak_id/index.php","../../DVWA/vulnerabilities/weak_id/source/high.php","../../DVWA/vulnerabilities/weak_id/source/impossible.php","../../DVWA/vulnerabilities/weak_id/source/low.php","../../DVWA/vulnerabilities/weak_id/source/medium.php","../../DVWA/vulnerabilities/xss_d/help/help.php","../../DVWA/vulnerabilities/xss_d/index.php","../../DVWA/vulnerabilities/xss_d/source/high.php","../../DVWA/vulnerabilities/xss_d/source/impossible.php","../../DVWA/vulnerabilities/xss_d/source/low.php","../../DVWA/vulnerabilities/xss_d/source/medium.php","../../DVWA/vulnerabilities/xss_r/help/help.php","../../DVWA/vulnerabilities/xss_r/index.php","../../DVWA/vulnerabilities/xss_r/source/high.php","../../DVWA/vulnerabilities/xss_r/source/impossible.php","../../DVWA/vulnerabilities/xss_r/source/low.php","../../DVWA/vulnerabilities/xss_r/source/medium.php","../../DVWA/vulnerabilities/xss_s/help/help.php","../../DVWA/vulnerabilities/xss_s/index.php","../../DVWA/vulnerabilities/xss_s/source/high.php","../../DVWA/vulnerabilities/xss_s/source/impossible.php","../../DVWA/vulnerabilities/xss_s/source/low.php","../../DVWA/vulnerabilities/xss_s/source/medium.php"]},"interfile_languages_used":[],"skipped_rules":[]}